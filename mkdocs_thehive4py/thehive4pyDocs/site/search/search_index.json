{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TheHive4py","text":"<p>TheHive4py is a Python API client for TheHive, a scalable 3-in-1 open source and free security incident response platform designed to make life easier for SOCs, CSIRTs, CERTs and any information security practitioner dealing with security incidents that need to be investigated and acted upon swiftly.</p> <p>TheHive4py allows analysts to send alerts to TheHive out of different sources. Those alerts can then be previewed and imported into cases using pre-defined templates.</p> <p>For example, a SOC may ask its constituency to send suspicious email reports to a specific mailbox that a script polls at regular intervals. When a new email is received, the script parses it then calls TheHive4py to create a corresponding alert in TheHive. Once the alert is raised, SOC analysts will get a notification thanks to TheHive's live stream so they can preview it and import it if deemed worth investigating using a specific template.</p>"},{"location":"#features","title":"Features","text":"<p>TheHive4py allows the following features:</p> Alerts <ul> <li> Create alert</li> <li> Get an alert</li> <li> Update an alert</li> <li> Delete an alert</li> <li> Bulk update alerts</li> <li> Bulk delete alerts</li> <li> Follow an alert</li> <li> Unfollow an alert</li> <li> Promote an alert to a case</li> <li> Create an observable</li> <li> Merge an alert into a case</li> <li> Bulk merge alerts into a case</li> <li> Find alerts</li> <li> Count alerts</li> <li> Find observables</li> <li> Find comments</li> <li> Create procedure</li> <li> Find procedure</li> </ul> Cases <ul> <li> Create a case</li> <li> Get a case</li> <li> Delete a case</li> <li> Update a case</li> <li> Bulk update cases</li> <li> Merge cases</li> <li> Unlink case</li> <li> Merge similar observables</li> <li> Get linked cases</li> <li> Delete custom field</li> <li> Import a case from a file</li> <li> Export a case to a file</li> <li> Get the timeline</li> <li> Add attachment</li> <li> Download attachment</li> <li> Delete attachment</li> <li> List the shares</li> <li> Share a case</li> <li> Unshare a case</li> <li> Set a share</li> <li> Remove a share</li> <li> Update a share</li> <li> Find case</li> <li> Count cases</li> <li> Create a task</li> <li> Fins tasks</li> <li> Create observable</li> <li> Find observables</li> <li> Create a procedure</li> <li> Find procedures</li> <li> Find attachments</li> <li> Find comments</li> <li> Close a case</li> <li> Open a case</li> </ul> Comments <ul> <li> Create in alert</li> <li> Create in case</li> <li> Get a comment</li> <li> Delete a comment</li> <li> Update a comment</li> </ul> Custom field <ul> <li> Create a custom field</li> <li> List custom fields</li> <li> Delete a custom field</li> <li> Update a custom field</li> </ul> Observable <ul> <li> Create in alert</li> <li> Create in case</li> <li> Get observable</li> <li> Delete observable</li> <li> Update an observable</li> <li> Bulk update</li> <li> Share observable</li> <li> Unshare observable</li> <li> List observables</li> <li> Find observable</li> <li> Count observables</li> <li> Download atachment</li> </ul> Observable type <ul> <li> Create an observable type</li> <li> Get an observable type</li> <li> Delete an observable type</li> <li> Find an observable type</li> </ul> Organisation <ul> <li> Create an organisation</li> <li> Get an organisation</li> <li> Update an organisation</li> <li> Delete an organisation</li> <li> Link organisations</li> <li> Unlink organisation</li> <li> List links</li> <li> Bulk link</li> <li> List sharing profiles</li> <li> Find organisation</li> <li> Count organisations</li> </ul> Procedure <ul> <li> Create a procedure in an alert</li> <li> Create a procedure in a case</li> <li> Get a procedure</li> <li> Delete a procedure</li> <li> Update a procedure</li> <li> Find a procedure</li> </ul> Profile <ul> <li> Create a profile</li> <li> Get an existing profile</li> <li> Delete a profile</li> <li> Update a profile</li> <li> Find a profile</li> <li> Count profiles</li> </ul> Task <ul> <li> Create a task in a case</li> <li> Get a task</li> <li> Delete a task</li> <li> Update a task</li> <li> Bulk update</li> <li> Get required actions</li> <li> Set as required</li> <li> Set as done</li> <li> Find task</li> <li> Count task</li> <li> Create log</li> <li> Find log</li> </ul> Task log <ul> <li> Create a task log</li> <li> Get an existing log</li> <li> Delete a log</li> <li> Update a log</li> <li> Add attachments</li> <li> Delete an attachment</li> </ul> Timeline <ul> <li> Get a case timeline</li> <li> Create an event</li> <li> Delete an event</li> <li> Update an event</li> </ul> User <ul> <li> Create user</li> <li> Get user</li> <li> Get current user</li> <li> Delete user</li> <li> Update user</li> <li> Lock user</li> <li> Unlock user</li> <li> Set organisation</li> <li> Set password</li> <li> Get api key</li> <li> Remove api key</li> <li> Renew apikey</li> <li> Find user</li> <li> Count users</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>On macOS and Linux, type:</p> <pre><code>sudo pip install thehive4py\n</code></pre> <p>or if you already installed it, update it by typing</p> <pre><code>sudo pip install -U thehive4py\n</code></pre> <p>If you are using Python on a Windows operating system, please forgo the <code>sudo</code> command.</p>"},{"location":"#license","title":"License","text":"<p>TheHive4py is an open source and free software released under the AGPL (Affero General Public License). We, TheHive Project, are committed to ensure that TheHive4py will remain a free and open source project on the long-run.</p>"},{"location":"#updates","title":"Updates","text":"<p>Information, news and updates are regularly posted on TheHive Project Twitter account and on the blog.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome your contributions. Please feel free to fork the code, play with it, make some patches and send us pull requests using issues.</p> <p>We do have a Code of conduct. Make sure to check it out before contributing.</p>"},{"location":"#support","title":"Support","text":"<p>Please open an issue on GitHub if you'd like to report a bug or request a feature. We are also available on Gitter to help you out.</p> <p>If you need to contact the project team, send an email to support@thehive-project.org.</p>"},{"location":"#community-discussions","title":"Community Discussions","text":"<p>We have set up a Google forum at https://groups.google.com/a/thehive-project.org/d/forum/users. To request access, you need a Google account. You may create one using a Gmail address or without one.</p>"},{"location":"#website","title":"Website","text":"<p>https://thehive-project.org/</p>"},{"location":"code_of_conduct/","title":"Contributor Convenant Code of Conduct","text":""},{"location":"code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"code_of_conduct/#our-standars","title":"Our Standars","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting</li> </ul>"},{"location":"code_of_conduct/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior, in compliance with the licensing terms applying to the Project developments.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. However, these actions shall respect the licensing terms of the Project Developments that will always supersede such Code of Conduct.</p>"},{"location":"code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at support@thehive-project.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at http://contributor-covenant.org/version/1/4</p> <p>This version includes a clarification to ensure that the code of conduct is in compliance with the free software licensing terms of the project.</p>"},{"location":"examples/Alert_operations/","title":"Alert operations","text":"<pre><code>from typing import List\n\nimport pytest\nfrom thehive4py.client import TheHiveApi\nfrom thehive4py.errors import TheHiveError\nfrom thehive4py.helpers import now_to_ts\nfrom thehive4py.query.filters import Eq\nfrom thehive4py.query.sort import Asc\nfrom thehive4py.types.alert import  InputUpdateAlert\nfrom thehive4py.types.observable import InputObservable\n\nTHEHIVE_URL = 'http://127.0.0.1:9000'\nTHEHIVE_API_KEY = '**YOUR_API_KEY**'\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n</code></pre>"},{"location":"examples/Alert_operations/#create-an-alert","title":"Create an alert","text":"<pre><code>test_alert = thehive.alert.create(\n    {\n        \"title\": \"my first alert\",\n        \"description\": \"...\",\n        \"type\": \"test\",\n        \"source\": \"test\",\n        \"sourceRef\": \"first\",\n        \"externalLink\": \"http://\",\n        \"date\": 123,\n        \"tags\": [\"whatever\"],\n    }\n)\n\ntest_alert2 = thehive.alert.create(\n    {\n        \"title\": \"my second alert\",\n        \"description\": \"...\",\n        \"type\": \"test2\",\n        \"source\": \"test2\",\n        \"sourceRef\": \"second\",\n        \"externalLink\": \"http://\",\n        \"date\": 123,\n        \"tags\": [\"whatever\"],\n    }\n)\n</code></pre>"},{"location":"examples/Alert_operations/#get-an-alert","title":"Get an alert","text":"<pre><code>fetched_alert = thehive.alert.get(test_alert[\"_id\"])\n</code></pre>"},{"location":"examples/Alert_operations/#update-an-alert","title":"Update an alert","text":"<pre><code>alert_id = test_alert[\"_id\"]\nalert_id_2 = test_alert2[\"_id\"]\nupdate_fields: InputUpdateAlert = {\n    \"title\": \"my updated alert\",\n    \"description\": \"my updated description\",\n}\nthehive.alert.update(alert_id=alert_id, fields=update_fields)\n</code></pre>"},{"location":"examples/Alert_operations/#promote-to-case","title":"Promote to case","text":"<pre><code>case_from_alert = thehive.alert.promote_to_case(\n    alert_id=alert_id, fields={\"title\": \"promoted title\"}\n)\n</code></pre>"},{"location":"examples/Alert_operations/#merge-an-alert-into-an-existing-case","title":"Merge an alert into an existing case","text":"<pre><code>case_id = case_from_alert[\"_id\"]\nmerged_case = thehive.alert.merge_into_case(alert_id=alert_id_2, case_id=case_id)\n</code></pre>"},{"location":"examples/Alert_operations/#find-and-count-existing-alerts-identified-by-alerts","title":"Find and count existing alerts identified by alerts","text":"<pre><code>alerts = [thehive.alert.get(test_alert[\"_id\"]), thehive.alert.get(test_alert2[\"_id\"])]\nfound_alerts = thehive.alert.find(\n    filters=Eq(\"title\", alerts[0][\"title\"]) | Eq(\"title\", alerts[1][\"title\"]),\n    sortby=Asc(\"_createdAt\"),\n)\nalert_count = thehive.alert.count()\n</code></pre>"},{"location":"examples/Alert_operations/#delete-an-alert","title":"Delete an alert","text":"<pre><code>thehive.alert.delete(alert_id)\n</code></pre>"},{"location":"examples/Alert_operations/#create-and-get-observable","title":"Create and get observable","text":"<pre><code>created_observables = thehive.alert.create_observable(\n    test_alert[\"_id\"], {\"dataType\": \"domain\", \"data\": \"example.com\"}\n)\nalert_observables = thehive.alert.find_observables(test_alert[\"_id\"])\n</code></pre>"},{"location":"examples/Alert_operations/#create-observable-from-file","title":"Create observable from file","text":"<pre><code>observable_path = str(\"path to the file\" / \"alert-observable.txt\")\nwith open(observable_path, \"w\") as observable_fp:\n    observable_fp.write(\"observable content\")\n\ncreated_observable = thehive.observable.create_in_alert(\n    alert_id=test_alert[\"_id\"],\n    observable={\n        \"dataType\": \"file\",\n        \"message\": \"file based observable\",\n    },\n    observable_path=observable_path,\n)[0]\n</code></pre>"},{"location":"examples/Alert_operations/#create-an-alert-with-an-observable","title":"Create an alert with an observable","text":"<pre><code>created_alert = thehive.alert.create(\n    {\n        \"title\": \"my first alert\",\n        \"description\": \"...\",\n        \"type\": \"test\",\n        \"source\": \"test\",\n        \"sourceRef\": \"second\",\n        \"externalLink\": \"http://\",\n        \"date\": 123,\n        \"tags\": [\"whatever\"],\n        \"observables\": [\n            {\"dataType\": \"url\", \"data\": \"example.org\"},\n            {\"dataType\": \"mail\", \"data\": \"foo@example.org\"},\n        ],\n    }\n)\n</code></pre>"},{"location":"examples/Alert_operations/#create-an-alert-with-an-observable-file","title":"Create an alert with an observable file","text":"<pre><code># attachment_path = str(\"tmp_path\" / \"alert-observable.txt\")\n# with open(attachment_path, \"w\") as attachment_fp:\n#     attachment_fp.write(\"observable content\")\n\n# alert_observables: List[InputObservable] = [\n#     {\"dataType\": \"url\", \"data\": \"example.com\"},\n#     {\"dataType\": \"file\", \"attachment\": \"obs1\"},\n# ]\n# created_alert = thehive.alert.create(\n#     alert={\n#         \"title\": \"my first alert\",\n#         \"description\": \"...\",\n#         \"type\": \"test\",\n#         \"source\": \"test\",\n#         \"sourceRef\": \"third\",\n#         \"date\": 123,\n#         \"observables\": alert_observables,\n#     },\n#     attachment_map={\"obs1\": attachment_path},\n# )\n</code></pre>"},{"location":"examples/Alert_operations/#create-and-find-comments","title":"Create and find comments","text":"<pre><code>created_comment = thehive.comment.create_in_alert(\n    comment={\"message\": \"my first comment\"},\n)\nalert_comments = thehive.alert.find_comments(alert_id=alert_id)\n</code></pre>"},{"location":"examples/Alert_operations/#create-and-find-procedure","title":"Create and find procedure","text":"<pre><code>created_procedure = thehive.alert.create_procedure(\n    procedure={\n        \"occurDate\": now_to_ts(),\n        \"patternId\": \"T1059.006\",\n        \"tactic\": \"execution\",\n        \"description\": \"...\",\n    },\n)\nalert_procedures = thehive.alert.find_procedures(alert_id=alert_id)\n</code></pre>"},{"location":"examples/Case_operations/","title":"Case operations","text":"<pre><code>from typing import List\n\nfrom thehive4py.client import TheHiveApi\nfrom thehive4py.helpers import now_to_ts\nfrom thehive4py.query.filters import Eq\nfrom thehive4py.query.sort import Asc\nfrom thehive4py.types.case import (\n    CaseStatus,\n    ImpactStatus,\n    InputUpdateCase,\n)\nfrom thehive4py.types.observable import InputObservable\nfrom thehive4py.types.share import InputShare\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n</code></pre>"},{"location":"examples/Case_operations/#create-and-get-a-case","title":"Create and get a case","text":"<pre><code>test_case = thehive.case.create(case={\"title\": \"my first case\", \"description\": \"...\"})\ntest_case2 = thehive.case.create(case={\"title\": \"my second case\", \"description\": \"...\"})\n\nfetched_case = thehive.case.get(test_case[\"_id\"])\n</code></pre>"},{"location":"examples/Case_operations/#update-a-case","title":"Update a case","text":"<pre><code>case_id = test_case[\"_id\"]\nupdate_fields: InputUpdateCase = {\n    \"title\": \"my updated case\",\n    \"description\": \"my updated description\",\n}\nthehive.case.update(case_id=case_id, case=update_fields)\n</code></pre>"},{"location":"examples/Case_operations/#merge-cases","title":"Merge cases","text":"<pre><code>test_cases = [test_case, test_case2]\ncase_ids = [case[\"_id\"] for case in test_cases]\nmerged_case = thehive.case.merge(case_ids=case_ids)\n</code></pre>"},{"location":"examples/Case_operations/#unlink-alert","title":"Unlink alert","text":"<pre><code>test_alert = thehive.alert.create(\n    {\n        \"title\": \"my first alert\",\n        \"description\": \"...\",\n        \"type\": \"test\",\n        \"source\": \"test\",\n        \"sourceRef\": \"first\",\n        \"externalLink\": \"http://\",\n        \"date\": 123,\n        \"tags\": [\"whatever\"],\n    }\n)\nalert_id = test_alert[\"_id\"]\ncase_id = test_case[\"_id\"]\n\nthehive.alert.merge_into_case(alert_id=alert_id, case_id=case_id)\nlinked_alert = thehive.alert.get(alert_id=alert_id)\n\nthehive.case.unlink_alert(case_id=case_id, alert_id=alert_id)\nunlinked_alert = thehive.alert.get(alert_id=alert_id)\n</code></pre>"},{"location":"examples/Case_operations/#merge-similar-observables","title":"Merge similar observables","text":"<pre><code>case_id = test_case[\"_id\"]\nthehive.case.create_observable(\n    case_id=case_id, observable={\"dataType\": \"ip\", \"data\": \"192.168.0.1\"}\n)\nthehive.case.create_observable(\n    case_id=case_id, observable={\"dataType\": \"ip\", \"data\": \"192.168.0.2\"}\n)\nresult = thehive.case.merge_similar_observables(case_id=case_id)\n</code></pre>"},{"location":"examples/Case_operations/#get-linked-cases","title":"Get linked cases","text":"<pre><code>test_cases = [test_case, test_case2]\ncommon_observable: InputObservable = {\n    \"data\": \"example.com\",\n    \"dataType\": \"domain\",\n}\n\nfor case in test_cases:\n    thehive.case.get(case_id=case[\"_id\"])\n    thehive.case.create_observable(case_id=case[\"_id\"], observable=common_observable)\nlinked_case = thehive.case.get_linked_cases(case_id=test_cases[0][\"_id\"])\n</code></pre>"},{"location":"examples/Case_operations/#export-and-import","title":"Export and import","text":"<pre><code># archive_path = str(\"export.thar\")\n# password = \"test\"\n# thehive.case.export_to_file(\n#     case_id=test_case[\"_id\"], password=password, export_path=archive_path\n# )\n# import_results = thehive.case.import_from_file(\n#     import_case={\"password\": password, \"observableRule\": \"analyst\"},\n#     import_path=archive_path,\n# )\n\n# # Get timeline\n\n# timeline = thehive.case.get_timeline(case_id=test_case[\"_id\"])\n# print(timeline)\n\n# Add and download attachment\n\n# attachment_paths = [str(tmp_path / f\"attachment-{i}.txt\") for i in range(2)]\n# download_attachment_paths = [str(tmp_path / f\"dl-attachment-{i}.txt\") for i in range(2)]\n\n# for path in attachment_paths:\n#     with open(path, \"w\") as attachment_fp:\n#         attachment_fp.write(f\"content of {path}\")\n\n# added_attachments = thehive.case.add_attachment(\n#     case_id=test_case[\"_id\"], attachment_paths=attachment_paths\n# )\n\n# for attachment, path in zip(added_attachments, download_attachment_paths):\n#     thehive.case.download_attachment(\n#         case_id=test_case[\"_id\"],\n#         attachment_id=attachment[\"_id\"],\n#         attachment_path=path,\n#     )\n</code></pre>"},{"location":"examples/Case_operations/#share-and-unshare","title":"Share and unshare","text":"<pre><code>organisation = \"cert\"\nshare: InputShare = {\"organisation\": organisation}\n\nthehive.case.share(case_id=test_case[\"_id\"], shares=[share])\nthehive.case.unshare(case_id=test_case[\"_id\"], organisation_ids=[organisation])\n</code></pre>"},{"location":"examples/Case_operations/#share-and-remove-share","title":"Share and remove share","text":"<pre><code>organisation = \"cert\"\nshare: InputShare = {\"organisation\": organisation}\n\nshares = thehive.case.share(case_id=test_case[\"_id\"], shares=[share])\nthehive.case.remove_share(share_id=shares[0][\"_id\"])\n</code></pre>"},{"location":"examples/Case_operations/#update-share","title":"Update share","text":"<pre><code>organisation = \"cert\"\nshare: InputShare = {\"organisation\": organisation, \"profile\": \"read-only\"}\ncreated_share = thehive.case.share(case_id=test_case[\"_id\"], shares=[share])[0]\nupdate_profile = \"read-only\"\nthehive.case.update_share(share_id=created_share[\"_id\"], profile=update_profile)\nupdated_share = thehive.case.share(case_id=test_case[\"_id\"], shares=[share])[0]\n</code></pre>"},{"location":"examples/Case_operations/#share-and-set-share","title":"Share and set share","text":"<pre><code>organisation = \"share-org\"\nshare: InputShare = {\"organisation\": organisation}\n\nshares = thehive.case.share(case_id=test_case[\"_id\"], shares=[share])\nset_shares = thehive.case.set_share(case_id=test_case[\"_id\"], shares=[])\n</code></pre>"},{"location":"examples/Case_operations/#find-and-count","title":"Find and count","text":"<pre><code>filters = Eq(\"title\", test_cases[0][\"title\"]) | Eq(\"title\", test_cases[1][\"title\"])\nfound_cases = thehive.case.find(\n    filters=filters,\n    sortby=Asc(\"_createdAt\"),\n)\ncase_count = thehive.case.count(filters=filters)\n````\n\n##### Delete\n```py\ncase_id = test_case[\"_id\"]\nthehive.case.delete(case_id)\n</code></pre>"},{"location":"examples/Case_operations/#create-observable-from-file","title":"Create observable from file","text":"<pre><code># observable_path = str(\"tmp_path\" / \"case-observable.txt\")\n# with open(observable_path, \"w\") as observable_fp:\n#     observable_fp.write(\"observable content\")\n\n# created_observable = thehive.observable.create_in_case(\n#     case_id=test_case[\"_id\"],\n#     observable={\n#         \"dataType\": \"file\",\n#         \"message\": \"file based observable\",\n#     },\n#     observable_path=observable_path,\n# )[0]\n# fetched_observable = thehive.observable.get(observable_id=created_observable[\"_id\"])\n</code></pre>"},{"location":"examples/Case_operations/#create-and-get-task","title":"Create and get task","text":"<pre><code>created_task = thehive.case.create_task(\n    case_id=test_case[\"_id\"], task={\"title\": \"my task\"}\n)\ncase_tasks = thehive.case.find_tasks(case_id=test_case[\"_id\"])\n</code></pre>"},{"location":"examples/Case_operations/#close-and-open","title":"Close and open","text":"<pre><code>case_id = test_case[\"_id\"]\nclose_status = CaseStatus.TruePositive\nclose_impact = ImpactStatus.WithImpact\nclose_summary = \"Closed...\"\nthehive.case.close(\n    case_id=case_id,\n    status=close_status,\n    summary=close_summary,\n    impact_status=close_impact,\n)\nclosed_case = thehive.case.get(case_id)\nopen_status = CaseStatus.InProgress\nthehive.case.open(case_id, status=open_status)\nreopened_case = thehive.case.get(case_id)\n</code></pre>"},{"location":"examples/Case_operations/#find-comments","title":"Find comments","text":"<pre><code>created_comment = thehive.comment.create_in_case(\n    case_id=test_case[\"_id\"],\n    comment={\"message\": \"my first comment\"},\n)\ncase_comments = thehive.case.find_comments(case_id=test_case[\"_id\"])\n</code></pre>"},{"location":"examples/Case_operations/#create-and-find-procedure","title":"Create and find procedure","text":"<pre><code>created_procedure = thehive.case.create_procedure(\n    case_id=test_case[\"_id\"],\n    procedure={\n        \"occurDate\": now_to_ts(),\n        \"patternId\": \"T1059.007\",\n        \"tactic\": \"execution\",\n        \"description\": \"...\",\n    },\n)\ncase_procedures = thehive.case.find_procedures(case_id=test_case[\"_id\"])\n</code></pre>"},{"location":"examples/Comment_operations/","title":"Comment operations","text":"<pre><code>from thehive4py.client import TheHiveApi\nfrom thehive4py.types.comment import InputUpdateComment\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n\ntest_alert = thehive.alert.create(\n    {\n        \"title\": \"my first alert\",\n        \"description\": \"...\",\n        \"type\": \"test\",\n        \"source\": \"test\",\n        \"sourceRef\": \"first\",\n        \"externalLink\": \"http://\",\n        \"date\": 123,\n        \"tags\": [\"whatever\"],\n    }\n)\n\ntest_case = thehive.case.create(case={\"title\": \"my first case\", \"description\": \"...\"})\n</code></pre>"},{"location":"examples/Comment_operations/#create-a-comment-in-an-alert-and-get-it","title":"Create a comment in an alert and get it","text":"<pre><code>created_comment = thehive.comment.create_in_alert(\n    alert_id=test_alert[\"_id\"],\n    comment={\n        \"message\": \"test comment\",\n    },\n)\nfetched_comment = thehive.comment.get(comment_id=created_comment[\"_id\"])\n</code></pre>"},{"location":"examples/Comment_operations/#create-a-comment-in-a-case","title":"Create a comment in a case","text":"<pre><code>test_comment = thehive.comment.create_in_case(\n    case_id=test_case[\"_id\"],\n    comment={\n        \"message\": \"test comment\",\n    },\n)\n</code></pre>"},{"location":"examples/Comment_operations/#delete-a-comment","title":"Delete a comment","text":"<pre><code>comment_id = test_comment[\"_id\"]\nthehive.comment.delete(comment_id=comment_id)\n</code></pre>"},{"location":"examples/Comment_operations/#update-a-comment-and-get-it","title":"Update a comment and get it","text":"<pre><code>comment_id = test_comment[\"_id\"]\nupdate_fields: InputUpdateComment = {\n    \"message\": \"updated comment\",\n}\nthehive.comment.update(comment_id=test_comment[\"_id\"], fields=update_fields)\nupdated_comment = thehive.comment.get(comment_id=comment_id)\n</code></pre>"},{"location":"examples/CustomField_operations/","title":"Custom field operations","text":"<pre><code>from thehive4py.client import TheHiveApi\nfrom thehive4py.types.custom_field import InputUpdateCustomField\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n</code></pre>"},{"location":"examples/CustomField_operations/#create-and-list-custom-fields","title":"Create and list custom fields","text":"<pre><code>test_custom_field = thehive.custom_field.create(\n    custom_field={\n        \"name\": \"my-field\",\n        \"displayName\": \"My Field\",\n        \"description\": \"...\",\n        \"group\": \"default\",\n        \"type\": \"string\",\n        \"options\": [],\n    }\n)\ncustom_fields = thehive.custom_field.list()\n</code></pre>"},{"location":"examples/CustomField_operations/#delete-custom-field","title":"Delete custom field","text":"<pre><code>thehive_admin.custom_field.delete(custom_field_id=test_custom_field[\"_id\"])\n</code></pre>"},{"location":"examples/CustomField_operations/#update-custom-field","title":"Update custom field","text":"<pre><code>custom_field_id = test_custom_field[\"_id\"]\nupdate_fields: InputUpdateCustomField = {\n    \"type\": \"float\",\n    \"displayName\": \"something else ...\",\n}\nthehive.custom_field.update(custom_field_id=custom_field_id, fields=update_fields)\nupdated_custom_field = [\n    cf for cf in thehive.custom_field.list() if cf[\"_id\"] == custom_field_id\n][0]\n</code></pre>"},{"location":"examples/ObservableType_operations/","title":"Observable type operations","text":"<pre><code>from thehive4py.client import TheHiveApi\nfrom thehive4py.query.filters import Eq\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n</code></pre>"},{"location":"examples/ObservableType_operations/#create-and-get-observable-type","title":"Create and get observable type","text":"<pre><code>created_observable_type = thehive.observable_type.create(\n    {\n        \"name\": \"new-observable-type\",\n    }\n)\ntest_observable_type = thehive.observable_type.get(created_observable_type[\"_id\"])\n</code></pre>"},{"location":"examples/ObservableType_operations/#find-observable-type","title":"Find observable type","text":"<pre><code>found_observable_types = thehive.observable_type.find(\n    filters=Eq(\"name\", test_observable_type[\"name\"])\n)\n</code></pre>"},{"location":"examples/ObservableType_operations/#delete-observable-type","title":"Delete observable type","text":"<pre><code>observable_type_id = test_observable_type[\"_id\"]\nthehive.observable_type.delete(observable_type_id)\n</code></pre>"},{"location":"examples/Observable_operations/","title":"Observable operations","text":"<pre><code>from thehive4py import TheHiveApi\nfrom thehive4py.query.sort import Asc\nfrom thehive4py.types.observable import (\n    InputBulkUpdateObservable,\n    InputUpdateObservable,\n)\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n\n\ntest_alert = thehive.alert.create(\n    {\n        \"title\": \"my first alert\",\n        \"description\": \"...\",\n        \"type\": \"test\",\n        \"source\": \"test\",\n        \"sourceRef\": \"first\",\n        \"externalLink\": \"http://\",\n        \"date\": 123,\n        \"tags\": [\"whatever\"],\n    }\n)\ntest_case = thehive.case.create(case={\"title\": \"my first case\", \"description\": \"...\"})\ncase_id = test_case[\"_id\"]\ntest_observable = thehive.case.create_observable(\n    case_id=case_id, observable={\"dataType\": \"ip\", \"data\": \"192.168.0.1\"}\n)\n</code></pre>"},{"location":"examples/Observable_operations/#create-in-alert-and-get","title":"Create in alert and get","text":"<pre><code>created_observable = thehive.observable.create_in_alert(\n    alert_id=test_alert[\"_id\"],\n    observable={\n        \"dataType\": \"domain\",\n        \"data\": \"example.com\",\n        \"message\": \"test observable\",\n    },\n)[0]\n\nfetched_observable = thehive.observable.get(observable_id=created_observable[\"_id\"])\n</code></pre>"},{"location":"examples/Observable_operations/#create-in-alert-from-file-and-download-as-zip","title":"Create in alert from file and download as zip","text":"<pre><code># observable_content = \"observable content\"\n# observable_filename = \"alert-observable.txt\"\n# observable_path = str(\"tmp_path\" / observable_filename)\n# with open(observable_path, \"w\") as observable_fp:\n#     observable_fp.write(observable_content)\n\n# created_observable = thehive.observable.create_in_alert(\n#     alert_id=test_alert[\"_id\"],\n#     observable={\n#         \"dataType\": \"file\",\n#         \"message\": \"file based observable\",\n#     },\n#     observable_path=observable_path,\n# )[0]\n\n# created_attachment = created_observable.get(\"attachment\")\n\n# observable_archive = str(\"tmp_path\" / \"downloaded-observable.zip\")\n# thehive.observable.download_attachment(\n#     observable_id=created_observable[\"_id\"],\n#     attachment_id=created_attachment[\"_id\"],\n#     observable_path=observable_archive,\n#     as_zip=True,\n# )\n</code></pre>"},{"location":"examples/Observable_operations/#create-in-case-and-get","title":"Create in case and get","text":"<pre><code>created_observable = thehive.observable.create_in_case(\n    case_id=test_case[\"_id\"],\n    observable={\n        \"dataType\": \"domain\",\n        \"data\": \"example.com\",\n        \"message\": \"test observable\",\n    },\n)[0]\n\nfetched_observable = thehive.observable.get(observable_id=created_observable[\"_id\"])\n</code></pre>"},{"location":"examples/Observable_operations/#delete","title":"Delete","text":"<pre><code>observable_id = test_observable[\"_id\"]\nthehive.observable.delete(observable_id=observable_id)\n</code></pre>"},{"location":"examples/Observable_operations/#update","title":"Update","text":"<pre><code>observable_id = test_observable[\"_id\"]\nupdate_fields: InputUpdateObservable = {\n    \"dataType\": \"fqdn\",\n    \"message\": \"updated observable\",\n}\nthehive.observable.update(observable_id=test_observable[\"_id\"], fields=update_fields)\nupdated_observable = thehive.observable.get(observable_id=observable_id)\n</code></pre>"},{"location":"examples/Observable_operations/#bulk-update","title":"Bulk update","text":"<pre><code>test_observables = [test_observable, created_observable]\nobservable_ids = [observable[\"_id\"] for observable in test_observables]\nupdate_fields: InputBulkUpdateObservable = {\n    \"ids\": observable_ids,\n    \"dataType\": \"other\",\n    \"message\": \"updated observable\",\n}\nthehive.observable.bulk_update(fields=update_fields)\nupdated_observables = thehive.observable.find()\n</code></pre>"},{"location":"examples/Observable_operations/#share-une-unshare","title":"Share une unshare","text":"<pre><code>organisation = \"cert\"\nthehive.observable.share(\n    observable_id=test_observable[\"_id\"], organisations=[organisation]\n)\nthehive.observable.unshare(\n    observable_id=test_observable[\"_id\"], organisations=[organisation]\n)\n</code></pre>"},{"location":"examples/Observable_operations/#find-and-count","title":"Find and count","text":"<pre><code>found_observables = thehive.observable.find(\n    sortby=Asc(\"_createdAt\"),\n)\nobservable_count = thehive.observable.count()\n</code></pre>"},{"location":"examples/Procedure_operations/","title":"Procedure operations","text":"<pre><code>from thehive4py.client import TheHiveApi\nfrom thehive4py.helpers import now_to_ts\nfrom thehive4py.types.procedure import InputUpdateProcedure\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n\ntest_alert = thehive.alert.create(\n    {\n        \"title\": \"my first alert\",\n        \"description\": \"...\",\n        \"type\": \"test\",\n        \"source\": \"test\",\n        \"sourceRef\": \"first\",\n        \"externalLink\": \"http://\",\n        \"date\": 123,\n        \"tags\": [\"whatever\"],\n    }\n)\ntest_case = thehive.case.create(case={\"title\": \"my first case\", \"description\": \"...\"})\ntest_observable = thehive.case.create_observable(\n    case_id=test_case[\"_id\"], observable={\"dataType\": \"ip\", \"data\": \"192.168.0.1\"}\n)\n</code></pre>"},{"location":"examples/Procedure_operations/#create-in-alert-and-get","title":"Create in alert and get","text":"<pre><code>created_procedure = thehive.procedure.create_in_alert(\n    alert_id=test_alert[\"_id\"],\n    procedure={\n        \"occurDate\": now_to_ts(),\n        \"patternId\": \"T1059.006\",\n        \"tactic\": \"execution\",\n        \"description\": \"...\",\n    },\n)\nfetched_procedure = thehive.procedure.get(procedure_id=created_procedure[\"_id\"])\n</code></pre>"},{"location":"examples/Procedure_operations/#create-in-case-and-get","title":"Create in case and get","text":"<pre><code>test_procedure = thehive.procedure.create_in_case(\n    case_id=test_case[\"_id\"],\n    procedure={\n        \"occurDate\": now_to_ts(),\n        \"patternId\": \"T1059.006\",\n        \"tactic\": \"execution\",\n        \"description\": \"...\",\n    },\n)\nfetched_procedure = thehive.procedure.get(procedure_id=created_procedure[\"_id\"])\n</code></pre>"},{"location":"examples/Procedure_operations/#update","title":"Update","text":"<pre><code>procedure_id = test_procedure[\"_id\"]\nupdate_fields: InputUpdateProcedure = {\n    \"description\": \"updated procedure\",\n    \"occurDate\": now_to_ts(),\n}\nthehive.procedure.update(procedure_id=test_procedure[\"_id\"], fields=update_fields)\n</code></pre>"},{"location":"examples/Profile_operations/","title":"Profile operations","text":"<pre><code>from thehive4py.client import TheHiveApi\nfrom thehive4py.query.filters import Eq\nfrom thehive4py.types.profile import InputUpdateProfile\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n</code></pre>"},{"location":"examples/Profile_operations/#create-and-get","title":"Create and get","text":"<pre><code>test_profile = thehive_admin.profile.create(\n    profile={\"name\": \"test-profile\", \"permissions\": []}\n)\n</code></pre>"},{"location":"examples/Profile_operations/#update","title":"Update","text":"<pre><code>update_fields: InputUpdateProfile = {\n    \"name\": \"updated-test-profile\",\n    \"permissions\": [\"manageAlert\", \"manageCase\"],\n}\nthehive_admin.profile.update(profile_id=test_profile[\"_id\"], fields=update_fields)\n</code></pre>"},{"location":"examples/Profile_operations/#find-and-count","title":"Find and count","text":"<pre><code>filters = Eq(\"name\", test_profile[\"name\"])\nfound_profiles = thehive_admin.profile.find(\n    filters=filters,\n)\nprofile_count = thehive_admin.profile.count(filters=filters)\n</code></pre>"},{"location":"examples/Profile_operations/#delete","title":"Delete","text":"<pre><code>thehive_admin.profile.delete(profile_id=test_profile[\"_id\"])\n</code></pre>"},{"location":"examples/TaskLog_opeartions/","title":"TaskLog operations","text":"<pre><code>from thehive4py.client import TheHiveApi\nfrom thehive4py.helpers import now_to_ts\nfrom thehive4py.types.task_log import InputUpdateTaskLog\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n\ntest_case = thehive.case.create(case={\"title\": \"my first case\", \"description\": \"...\"})\ntest_task = thehive.task.create(case_id=test_case[\"_id\"], task={\"title\": \"test task\"})\n</code></pre>"},{"location":"examples/TaskLog_opeartions/#create-and-get","title":"Create and get","text":"<pre><code>test_task_log = thehive.task_log.create(\n    task_id=test_task[\"_id\"],\n    task_log={\n        \"message\": \"My test log\",\n        \"includeInTimeline\": now_to_ts(),\n        \"startDate\": now_to_ts(),\n    },\n)\nfetched_log = thehive.task_log.get(task_log_id=test_task_log[\"_id\"])\n</code></pre>"},{"location":"examples/TaskLog_opeartions/#update","title":"Update","text":"<pre><code>update_fields: InputUpdateTaskLog = {\"message\": \"updated task log message\"}\nthehive.task_log.update(task_log_id=test_task_log[\"_id\"], fields=update_fields)\n</code></pre>"},{"location":"examples/TaskLog_opeartions/#add-and-delet-attachment","title":"Add and delet attachment","text":"<pre><code># attachment_path = str(\"tmp_path\" / \"my-attachment.txt\")\n# with open(attachment_path, \"w\") as attachment_fp:\n#     attachment_fp.write(\"some content...\")\n\n# thehive.task_log.add_attachments(\n#     task_log_id=test_task_log[\"_id\"], attachment_paths=[attachment_path]\n# )\n\n# attachments = thehive.task_log.get(task_log_id=test_task_log[\"_id\"]).get(\n#     \"attachments\", []\n# )\n# for attachment in attachments:\n#     thehive.task_log.delete_attachment(\n#         task_log_id=test_task_log[\"_id\"], attachment_id=attachment[\"_id\"]\n#     )\n</code></pre>"},{"location":"examples/TaskLog_opeartions/#delete","title":"Delete","text":"<pre><code>thehive.task_log.delete(task_log_id=test_task_log[\"_id\"])\n</code></pre>"},{"location":"examples/Task_operations/","title":"Task operations","text":"<pre><code>from thehive4py.client import TheHiveApi\nfrom thehive4py.query.filters import Eq\nfrom thehive4py.query.sort import Asc\nfrom thehive4py.types.task import InputBulkUpdateTask, InputUpdateTask\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n\ntest_case = thehive.case.create(case={\"title\": \"my first case\", \"description\": \"...\"})\n</code></pre>"},{"location":"examples/Task_operations/#create-and-get","title":"Create and get","text":"<pre><code>test_task = thehive.task.create(case_id=test_case[\"_id\"], task={\"title\": \"test task\"})\ntest_task2 = thehive.task.create(\n    case_id=test_case[\"_id\"], task={\"title\": \"test taskn 2\"}\n)\ntest_tasks = [test_task, test_task2]\n\nfetched_task = thehive.task.get(task_id=test_task[\"_id\"])\n</code></pre>"},{"location":"examples/Task_operations/#update","title":"Update","text":"<pre><code>update_fields: InputUpdateTask = {\"title\": \"updated task title\"}\nthehive.task.update(task_id=test_task[\"_id\"], fields=update_fields)\n</code></pre>"},{"location":"examples/Task_operations/#bulk-update","title":"Bulk update","text":"<pre><code>task_ids = [task[\"_id\"] for task in test_tasks]\nupdate_fields: InputBulkUpdateTask = {\n    \"ids\": task_ids,\n    \"title\": \"my updated task\",\n}\nthehive.task.bulk_update(fields=update_fields)\n</code></pre>"},{"location":"examples/Task_operations/#set-as-required-and","title":"Set as required and","text":"<pre><code>organisation = \"cert\"\n\nthehive.task.set_as_required(task_id=test_task[\"_id\"], org_id=organisation)\nactions = thehive.task.get_required_actions(task_id=test_task[\"_id\"])\n\nthehive.task.set_as_done(task_id=test_task[\"_id\"], org_id=organisation)\nactions = thehive.task.get_required_actions(task_id=test_task[\"_id\"])\n</code></pre>"},{"location":"examples/Task_operations/#find-and-count","title":"Find and count","text":"<pre><code>filters = Eq(\"title\", test_tasks[0][\"title\"]) | Eq(\"title\", test_tasks[1][\"title\"])\nfound_tasks = thehive.task.find(\n    filters=filters,\n    sortby=Asc(\"_createdAt\"),\n)\n\ntask_count = thehive.task.count(filters=filters)\n</code></pre>"},{"location":"examples/Task_operations/#delete","title":"Delete","text":"<pre><code>thehive.task.delete(task_id=test_task[\"_id\"])\n</code></pre>"},{"location":"examples/Task_operations/#create-and-get-logs","title":"Create and get logs","text":"<pre><code>created_task = thehive.task.create_log(\n    task_id=test_task[\"_id\"], task_log={\"message\": \"my test log\"}\n)\ntask_logs = thehive.task.find_logs(task_id=test_task[\"_id\"])\n</code></pre>"},{"location":"examples/Timeline_operations/","title":"Timeline operations","text":"<pre><code>from thehive4py.client import TheHiveApi\nfrom thehive4py.helpers import now_to_ts\nfrom thehive4py.types.timeline import InputUpdateCustomEvent\n\nTHEHIVE_URL = \"http://127.0.0.1:9000\"\nTHEHIVE_API_KEY = \"**YOUR_API_KEY**\"\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n\ntest_case = thehive.case.create(case={\"title\": \"my first case\", \"description\": \"...\"})\n</code></pre>"},{"location":"examples/Timeline_operations/#get","title":"Get","text":"<pre><code>timeline = thehive.timeline.get(case_id=test_case[\"_id\"])\n</code></pre>"},{"location":"examples/Timeline_operations/#create-event","title":"Create event","text":"<pre><code>test_timeline_event = thehive.timeline.create_event(\n    case_id=test_case[\"_id\"],\n    event={\"date\": now_to_ts(), \"title\": \"custom timeline event\"},\n)\n</code></pre>"},{"location":"examples/Timeline_operations/#update-event","title":"Update event","text":"<pre><code>event_id = test_timeline_event[\"_id\"]\nupdate_fields: InputUpdateCustomEvent = {\n    \"date\": now_to_ts(),\n    \"endDate\": now_to_ts(),\n    \"title\": \"updated event\",\n    \"description\": \"updated event description\",\n}\nthehive.timeline.update_event(event_id=event_id, fields=update_fields)\n</code></pre>"},{"location":"examples/Timeline_operations/#delete-event","title":"Delete event","text":"<pre><code>thehive.timeline.delete_event(event_id=test_timeline_event[\"_id\"])\n</code></pre>"},{"location":"examples/User_operations/","title":"User operations","text":"<pre><code>from typing import List\n\nfrom thehive4py.client import TheHiveApi\nfrom thehive4py.errors import TheHiveError\nfrom thehive4py.query.filters import Eq\nfrom thehive4py.types.user import InputUpdateUser, InputUserOrganisation\n\nTHEHIVE_URL = 'http://127.0.0.1:9000'\nTHEHIVE_API_KEY = '**YOUR_API_KEY**'\nthehive = TheHiveApi(THEHIVE_URL, THEHIVE_API_KEY)\n</code></pre>"},{"location":"examples/User_operations/#create-user","title":"Create user","text":"<pre><code>created_user = thehive.user.create(\n    user={\"login\": \"bailando@sin.ti\", \"name\": \"Bailando\", \"profile\": \"analyst\"}\n)\n</code></pre>"},{"location":"examples/User_operations/#get-user","title":"Get user","text":"<pre><code>user = thehive.user.get(created_user[\"_id\"])\n</code></pre>"},{"location":"examples/User_operations/#update-user","title":"Update user","text":"<pre><code>update_fields: InputUpdateUser = {\n    \"name\": \"Updated user\",\n    \"profile\": \"read-only\",\n    \"email\": \"whatever@example.com\",\n    \"organisation\": \"cert\",\n}\nthehive.user.update(user_id=user[\"_id\"], fields=update_fields)\n</code></pre>"},{"location":"examples/User_operations/#lock-and-unlock-user","title":"Lock and unlock user","text":"<pre><code>locked_user = thehive.user.lock(user_id=user[\"_id\"])\nunlocked_user = thehive.user.unlock(user_id=user[\"_id\"])\n</code></pre>"},{"location":"examples/User_operations/#set-organisations","title":"Set organisations","text":"<pre><code>organisations: List[InputUserOrganisation] = [\n    {\n        \"default\": True,\n        \"organisation\": user[\"organisation\"],\n        \"profile\": \"analyst\",\n    },\n    {\n        \"default\": False,\n        \"organisation\": \"cert\",\n        \"profile\": \"read-only\",\n    },\n]\nuser_organisations = thehive.user.set_organisations(\n    user_id=user[\"_id\"], organisations=organisations\n)\n</code></pre>"},{"location":"examples/User_operations/#set-password","title":"Set password","text":"<pre><code>password = \"super-secruht!\"\nthehive.user.set_password(user_id=user[\"_id\"], password=password)\n</code></pre>"},{"location":"examples/User_operations/#renew-apikey","title":"Renew apikey","text":"<pre><code>thehive.user.renew_apikey(user_id=user[\"_id\"])\n</code></pre>"},{"location":"examples/User_operations/#removeapikey","title":"Removeapikey","text":"<pre><code>thehive.user.remove_apikey(user_id=user[\"_id\"])\n</code></pre>"},{"location":"examples/User_operations/#find-and-count","title":"Find and count","text":"<pre><code>user_filters = Eq(\"login\", user[\"login\"])\nfound_users = thehive.user.find(filters=user_filters)\nuser_count = thehive.user.count(filters=user_filters)\n</code></pre>"},{"location":"examples/User_operations/#delete-user","title":"Delete user","text":"<pre><code>Delete_user = thehive.user.delete(\n    user_id=user[\"_id\"], organisation=user[\"organisation\"]\n)\n</code></pre>"},{"location":"reference/endpoints/AlertEndpoint/","title":"AlertEndpoint","text":""},{"location":"reference/endpoints/AlertEndpoint/#createself-alert-attachment_map","title":"create(self, alert, attachment_map)","text":"<p>Create a new alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert</code> <code>InputAlert</code> The data for the new alert required <code>attachment_map</code> <code>Optional[Dict[str, str]]</code> A dictionary mapping attachment keys to                       file path Not required <p>Returns:</p> Type Description <code>OutputAlert</code> The created alert"},{"location":"reference/endpoints/AlertEndpoint/#getself-alert_id","title":"get(self, alert_id)","text":"<p>Get an existing alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to get required <p>Returns:</p> Type Description <code>OutputAlert</code> The retrieved alert"},{"location":"reference/endpoints/AlertEndpoint/#updateself-alert_id-fields","title":"update(self, alert_id, fields)","text":"<p>Update an existing alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to update required <code>fields</code> <code>InputUpdateAlert</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/AlertEndpoint/#deleteself-alert_id","title":"delete(self, alert_id)","text":"<p>Delete an existing alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/AlertEndpoint/#bulk_updateselffields","title":"bulk_update(self,fields)","text":"<p>Update multiple alerts at once.</p> <p>Parameters:</p> Name Type Description Default <code>fields</code> <code>InputBulkUpdateAlert</code> The updates to apply required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/AlertEndpoint/#bulk_deleteself-ids","title":"bulk_delete(self, ids)","text":"<p>Delete multiple alerts at once.</p> <p>Parameters:</p> Name Type Description Default <code>ids</code> <code>List[str]</code> The IDs of the alerts to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/AlertEndpoint/#followself-alert_id","title":"follow(self, alert_id)","text":"<p>Follow an alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to follow required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/AlertEndpoint/#unfollowself-alert_id","title":"unfollow(self, alert_id)","text":"<p>Unfollow an alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to unfollow required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/AlertEndpoint/#promote_to_caseself-alert_id-fields","title":"promote_to_case(self, alert_id, fields)","text":"<p>Promote an alert to a case.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to promote required <code>fields</code> <code>InputPromoteAlert</code> The fields to include in the new case required <p>Returns:</p> Type Description <code>OutputCase</code> The newly created case"},{"location":"reference/endpoints/AlertEndpoint/#create_observableself-alert_id-observable-observable_path","title":"create_observable(self, alert_id, observable, observable_path)","text":"<p>Create an observable.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to associate the observable with required <code>observable</code> <code>InputObservable</code> The observable to create required <code>observable_path</code> <code>Optional[str]</code> The path to associate with the observable. Default: <code>None</code> Not         required <p>Returns:</p> Type Description <code>List[OutputObservable]</code> The created observable"},{"location":"reference/endpoints/AlertEndpoint/#merge_into_caseself-alert-case_id","title":"merge_into_case(self, alert, case_id)","text":"<p>Merge an alert into a case.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to merge into the case required <code>case_id</code> <code>str</code> The ID of the case to merge the alert into required <p>Returns:</p> Type Description <code>OutputCase</code> The updated case"},{"location":"reference/endpoints/AlertEndpoint/#bulk_merge_into_caseself-case_id-alert_ids","title":"bulk_merge_into_case(self, case_id, alert_ids)","text":"<p>Bulk merge alerts into a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case to merge the alerts into required <code>alert_ids</code> <code>List[str]</code> The IDs of the alerts to merge required <p>Returns:</p> Type Description <code>OutputCase</code> The updated case"},{"location":"reference/endpoints/AlertEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Find alerts matching the given filters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search required <code>sortby</code> <code>Optional[SortExpr]</code> The sorting criteria to apply to the search required <code>paginate</code> <code>Optional[Paginate]</code> The pagination settings to apply to the search required <p>Returns:</p> Type Description <code>List[OutputAlert]</code> The matching alerts"},{"location":"reference/endpoints/AlertEndpoint/#countself-filters","title":"count(self, filters)","text":"<p>Count alerts matching the given filters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search required <p>Returns:</p> Type Description <code>int</code> The number of matching alerts"},{"location":"reference/endpoints/AlertEndpoint/#find_observablesself-alert_id-filters-sortby-paginate","title":"find_observables(self, alert_id, filters, sortby, paginate)","text":"<p>Find observables matching the given filters.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to retrieve observables for required <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search required <code>sortby</code> <code>Optional[SortExpr]</code> The sorting criteria to apply to the search required <code>paginate</code> <code>Optional[Paginate]</code> The pagination settings to apply to the search required <p>Returns:</p> Type Description <code>List[OutputObservable]</code> The matching observables"},{"location":"reference/endpoints/AlertEndpoint/#find_commentsself-alert_id-filters-sortby-paginate","title":"find_comments(self, alert_id, filters, sortby, paginate)","text":"<p>Retrieve comments for a given alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to retrieve comments for required <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search None <code>sortby</code> <code>Optional[SortExpr]</code> The sorting criteria to apply to the search None <code>paginate</code> <code>Optional[Paginate]</code> The pagination settings to apply to the search None <p>Returns:</p> Type Description <code>List[OutputComment]</code> A list of comments for the given alert"},{"location":"reference/endpoints/AlertEndpoint/#create_procedureself-alert_id-procedure","title":"create_procedure(self, alert_id, procedure)","text":"<p>Create a procedure for a given alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to create the procedure for required <code>procedure</code> <code>InputProcedure</code> The procedure to create required <p>Returns:</p> Type Description <code>OutputCase</code> The newly created case"},{"location":"reference/endpoints/AlertEndpoint/#find_procedureself-alert_id-filters-sortby-paginate","title":"find_procedure(self, alert_id, filters, sortby, paginate)","text":"<p>Retrieve procedure for a given alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to retrieve procedures for required <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search None <code>sortby</code> <code>Optional[SortExpr]</code> The sorting criteria to apply to the search None <code>paginate</code> <code>Optional[Paginate]</code> The pagination settings to apply to the search None <p>Returns:</p> Type Description <code>List[OutputProcedure]</code> A list of procedures for the given alert"},{"location":"reference/endpoints/CaseEndpoint/","title":"CaseEndpoint","text":"<p>CaseId: Union[str, int]</p>"},{"location":"reference/endpoints/CaseEndpoint/#createself-case","title":"create(self, case)","text":"<p>Create a new case.</p> <p>Parameters:</p> Name Type Description Default <code>case</code> <code>InputCase</code> The case to create required <p>Returns:</p> Type Description <code>OutputCase</code> The created case"},{"location":"reference/endpoints/CaseEndpoint/#getself-case_id","title":"get(self, case_id)","text":"<p>Get an existing case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to retrieve required <p>Returns:</p> Type Description <code>OutputCase</code> The retrieved case"},{"location":"reference/endpoints/CaseEndpoint/#deleteself-case_id","title":"delete(self, case_id)","text":"<p>Delete an existing case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#updateself-case_id-case","title":"update(self, case_id, case)","text":"<p>Update an existing case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to update required <code>case</code> <code>InputUpdateCase</code> The updated case required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#bulk_updateselffields","title":"bulk_update(self,fields)","text":"<p>Update multiple cases at once.</p> <p>Parameters:</p> Name Type Description Default <code>fields</code> <code>InputBulkUpdateCase</code> The updates to apply required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#mergeself-case_ids","title":"merge(self, case_ids)","text":"<p>Merge multiple cases at once.</p> <p>Parameters:</p> Name Type Description Default <code>case_ids</code> <code>Sequence[CaseId]</code> The IDs of the cases to merge required <p>Returns:</p> Type Description <code>OutputCase</code> The merged case"},{"location":"reference/endpoints/CaseEndpoint/#unlink_alertself-case_id-alert_id","title":"unlink_alert(self, case_id, alert_id)","text":"<p>Remove a link between a case and an alert.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case to unlink the alert from required <code>alert_id</code> <code>str</code> The ID of the alert to unlink from the case required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#merge_similar_observablesself-case_id","title":"merge_similar_observables(self, case_id)","text":"<p>Merge similar observables in a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to merge similar observables in required <p>Returns:</p> Type Description <code>dict</code> A dictionary containing information about the merged observables"},{"location":"reference/endpoints/CaseEndpoint/#get_linked_casesself-case_id","title":"get_linked_cases(self, case_id)","text":"<p>Get a list of cases linked to the specified case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to get linked cases for required <p>Returns:</p> Type Description <code>List[OutputCase]</code> A list of OutputCase objects representing the linked cases"},{"location":"reference/endpoints/CaseEndpoint/#delete_custom_fieldself-custom_field_id","title":"delete_custom_field(self, custom_field_id)","text":"<p>Delete a custom field.</p> <p>Parameters:</p> Name Type Description Default <code>custom_field_id</code> <code>str</code> The ID of the custom field to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#import_from_fileself-import_case-import_path","title":"import_from_file(self, import_case, import_path)","text":"<p>Import a case from a file.</p> <p>Parameters:</p> Name Type Description Default <code>import_case</code> <code>InputImportCase</code> The ID of the alert to merge into the case required <code>import_path</code> <code>str</code> The ID of the case to merge the alert into required <p>Returns:</p> Type Description <code>dict</code> A dictionary containing information about the imported case"},{"location":"reference/endpoints/CaseEndpoint/#export_to_fileself-case_id-password-export_path","title":"export_to_file(self, case_id, password, export_path)","text":"<p>Export a case to a file.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to export required <code>password</code> <code>str</code> The password to encrypt the exported file with required <code>export_path</code> <code>str</code> The path to save the exported file to required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#get_timelineself-case_id","title":"get_timeline(self, case_id)","text":"<p>Retrieve the timeline of a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case required <p>Returns:</p> Type Description <code>OutputTimeline</code> The timeline of the case"},{"location":"reference/endpoints/CaseEndpoint/#add_attachmentself-case_id-attachment_paths","title":"add_attachment(self, case_id, attachment_paths)","text":"<p>Add one or more attachments to a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to add the attachments to required <code>attachment_paths</code> <code>List[str]</code> A list of file paths for the attachments to add required <p>Returns:</p> Type Description <code>List[OutputAttachment]</code> A list of OutputAttachment objects representing the added attachments"},{"location":"reference/endpoints/CaseEndpoint/#download_attachmentself-case_id-attachment_id-attachment_paths","title":"download_attachment(self, case_id, attachment_id, attachment_paths)","text":"<p>Download an attachment from a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The case's id required <code>attachment_id</code> <code>str</code> The attachment's id required <code>attachment_paths</code> <code>str</code> The attachment's path required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#delete_attachmentself-case_id-attachment_id","title":"delete_attachment(self, case_id, attachment_id)","text":"<p>Delete an attachment from a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The case's id required <code>attachment_id</code> <code>str</code> The attachment's id required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#list_sharesself-case_id","title":"list_shares(self, case_id)","text":"<p>List the shares of the specified case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to list the shares of required <p>Returns:</p> Type Description <code>List[OutputShare]</code> A list of <code>OutputShare</code> objects representing the shares of the specified case"},{"location":"reference/endpoints/CaseEndpoint/#shareself-case_id-shares","title":"share(self, case_id, shares)","text":"<p>Share a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to share required <code>shares</code> <code>List[InputShare]</code> A list of <code>InputShare</code> objects representing the organisations to share the case with required <p>Returns:</p> Type Description <code>List[OutputShare]</code> A list of <code>OutputShare</code> objects representing the shares that were created by the operation"},{"location":"reference/endpoints/CaseEndpoint/#unshareself-case_id-organisation_ids","title":"unshare(self, case_id, organisation_ids)","text":"<p>Unshare a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to unshare required <code>organisation_ids</code> <code>List[str]</code> A list of organisation IDs representing the organisations to unshare the case from required <p>Returns:</p> Type Description <code>None</code> A list of <code>OutputShare</code> objects representing the shares that were created by the operation"},{"location":"reference/endpoints/CaseEndpoint/#set_shareself-case_id-shares","title":"set_share(self, case_id, shares)","text":"<p>Set a share.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to set the shares of required <code>shares</code> <code>List[InputShare]</code> A list of <code>InputShare</code> objects representing the organisations to share the case with required <p>Returns:</p> Type Description <code>List[OutputShare]</code> A list of <code>OutputShare</code> objects representing the shares that were created"},{"location":"reference/endpoints/CaseEndpoint/#remove_shareself-share_id","title":"remove_share(self, share_id)","text":"<p>Remove the specified share.</p> <p>Parameters:</p> Name Type Description Default <code>share_id</code> <code>str</code> The ID of the share to remove required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#update_shareself-share_id-profile","title":"update_share(self, share_id, profile)","text":"<p>Update the profile of a shared case.</p> <p>Parameters:</p> Name Type Description Default <code>share_id</code> <code>str</code> The ID of the share to update required <code>profile</code> <code>str</code> The new profile to set required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Find cases based on the specified filters, sort order, and pagination.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <code>sortby</code> <code>Optional[SortExpr]</code> The sort order to apply to the results None <code>paginate</code> <code>Optional[Paginate]</code> The pagination parameters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputCase]</code> A list of matching cases"},{"location":"reference/endpoints/CaseEndpoint/#countself-filters","title":"count(self, filters)","text":"<p>Count cases based on the specified filters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputCase]</code> A list of matching cases"},{"location":"reference/endpoints/CaseEndpoint/#create_taskself-case_id-task","title":"create_task(self, case_id, task)","text":"<p>Create a task in a specified case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to create the task for required <code>task</code> <code>InputTask</code> The task to create required <p>Returns:</p> Type Description <code>OutputTask</code> The created task"},{"location":"reference/endpoints/CaseEndpoint/#find_tasksself-case_id-filters-sortby-paginate","title":"find_tasks(self, case_id, filters, sortby, paginate)","text":"<p>Find tasks in a specified case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to search for tasks in required <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <code>sortby</code> <code>Optional[SortExpr]</code> The sort order to apply to the results None <code>paginate</code> <code>Optional[Paginate]</code> The pagination parameters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputTask]</code> A list of tasks associated with the specified case"},{"location":"reference/endpoints/CaseEndpoint/#create_observableself-case_id-observable-observable_path","title":"create_observable(self, case_id, observable, observable_path)","text":"<p>Create one or more observables associated with the specified case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to create observables for required <code>observable</code> <code>InputObservable]</code> The observable to create required <code>observable_path</code> <code>Optional[str]</code> Optional path to a file containing additional data related to the observable None <p>Returns:</p> Type Description <code>List[OutputObservable]</code> A list of observables that were created"},{"location":"reference/endpoints/CaseEndpoint/#find_observablesself-case_id-filters-sortby-paginate","title":"find_observables(self, case_id, filters, sortby, paginate)","text":"<p>Find observables associated with the specified case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to search for observables in required <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <code>sortby</code> <code>Optional[SortExpr]</code> The sort order to apply to the results None <code>paginate</code> <code>Optional[Paginate]</code> The pagination parameters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputObservable]</code> A list of observables associated with the specified case"},{"location":"reference/endpoints/CaseEndpoint/#create_procedureself-case_id-procedure","title":"create_procedure(self, case_id, procedure)","text":"<p>Create a new procedure associated with the specified case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case to create the procedure for required <code>procedure</code> <code>InputProcedure</code> The procedure to create required <p>Returns:</p> Type Description <code>OutputProcedure</code> The procedure that was created"},{"location":"reference/endpoints/CaseEndpoint/#find_proceduresself-case_id-filters-sortby-paginate","title":"find_procedures(self, case_id, filters, sortby, paginate)","text":"<p>Finds procedures associated with a given case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case to search for procedures required <code>filters</code> <code>Optional[FilterExpr]</code> A filter expression to filter the procedures by None <code>sortby</code> <code>Optional[SortExpr]</code> A sort expression to sort the procedures by None <code>paginate</code> <code>Optional[Paginate]</code> A pagination object to limit and offset the results None <p>Returns:</p> Type Description <code>List[OutputProcedure]</code> A list of procedures associated with the given case"},{"location":"reference/endpoints/CaseEndpoint/#find_attachmentsself-case_id-filters-sortby-paginate","title":"find_attachments(self, case_id, filters, sortby, paginate)","text":"<p>Finds attachments associated with a given case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case to search for attachments required <code>filters</code> <code>Optional[FilterExpr]</code> A filter expression to filter the attachments by None <code>sortby</code> <code>Optional[SortExpr]</code> A sort expression to sort the attachments by None <code>paginate</code> <code>Optional[Paginate]</code> A pagination object to limit and offset the results None <p>Returns:</p> Type Description <code>List[OutputAttachment]</code> A list of attachments associated with the given case"},{"location":"reference/endpoints/CaseEndpoint/#find_commentsself-case_id-filters-sortby-paginate","title":"find_comments(self, case_id, filters, sortby, paginate)","text":"<p>Finds comments associated with a given case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case to search for comments required <code>filters</code> <code>Optional[FilterExpr]</code> A filter expression to filter the comments by None <code>sortby</code> <code>Optional[SortExpr]</code> A sort expression to sort the comments by None <code>paginate</code> <code>Optional[Paginate]</code> A pagination object to limit and offset the results None <p>Returns:</p> Type Description <code>List[OutputComment]</code> A list of comments associated with the given case"},{"location":"reference/endpoints/CaseEndpoint/#closeself-case_id-status-summary-impact_status","title":"close(self, case_id, status, summary, impact_status)","text":"<p>Close a given case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to close required <code>status</code> <code>CaseStatusValue</code> The status of the case after closing required <code>summary</code> <code>str</code> A summary of the case required <code>impact_status</code> <code>ImpactStatusValue</code> The impact status of the case after closing \"NotApplicable\" <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CaseEndpoint/#openself-case_id-status-summary-impact_status","title":"open(self, case_id, status, summary, impact_status)","text":"<p>Open a given case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the case to open required <code>status</code> <code>CaseStatusValue</code> The status of the case after opening. Default is CaseStatus.InProgress CaseStatus.InProgress <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CommentEndpoint/","title":"CommentEndpoint","text":"<p>Class representing TheHive's comment endpoint.</p>"},{"location":"reference/endpoints/CommentEndpoint/#create_in_alertself-alert_id-comment","title":"create_in_alert(self, alert_id, comment)","text":"<p>Creates a comment in the specified alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert required <code>comment</code> <code>InputComment</code> An object containing the comment data required <p>Returns:</p> Type Description <code>OutputComment</code> An object containing the created comment data"},{"location":"reference/endpoints/CommentEndpoint/#create_in_caseself-case_id-comment","title":"create_in_case(self, case_id, comment)","text":"<p>Creates a comment in the specified alert.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case required <code>comment</code> <code>InputComment</code> An object containing the comment data required <p>Returns:</p> Type Description <code>OutputComment</code> An object containing the created comment data"},{"location":"reference/endpoints/CommentEndpoint/#getself-comment_id","title":"get(self, comment_id)","text":"<p>Gets the comment data for the specified comment.</p> <p>Parameters:</p> Name Type Description Default <code>comment_id</code> <code>str</code> The ID of the commment required <p>Returns:</p> Type Description <code>OutputComment</code> An object containing the created comment data"},{"location":"reference/endpoints/CommentEndpoint/#deleteself-comment_id","title":"delete(self, comment_id)","text":"<p>Deletes the specified comment.</p> <p>Parameters:</p> Name Type Description Default <code>comment_id</code> <code>str</code> The ID of the comment to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CommentEndpoint/#updateself-comment_id-fields","title":"update(self, comment_id, fields)","text":"<p>Delete an existing case.</p> <p>Parameters:</p> Name Type Description Default <code>comment_id</code> <code>CaseId</code> The ID of the case to delete The ID of the comment to update required <code>fields</code> <code>InputUpdateComment</code> An object containing the updated comment data required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CustomFieldEndpoint/","title":"CustomFieldEndpoint","text":"<p>Class representing TheHive's custom field endpoint.</p>"},{"location":"reference/endpoints/CustomFieldEndpoint/#createself-custom_field","title":"create(self, custom_field)","text":"<p>Create a custom field.</p> <p>Parameters:</p> Name Type Description Default <code>custom_field</code> <code>InputCustomField</code> An object containing the custom field data required <p>Returns:</p> Type Description <code>OutputCustomField</code> An object containing the created custom field data"},{"location":"reference/endpoints/CustomFieldEndpoint/#listself","title":"list(self)","text":"<p>Gets a list of all custom fields.</p> <p>Returns:</p> Type Description <code>List[OutputCustomField]</code> A list of objects containing the custom field data"},{"location":"reference/endpoints/CustomFieldEndpoint/#deleteself-custom_field_id","title":"delete(self, custom_field_id)","text":"<p>Deletes the specified custom field.</p> <p>Parameters:</p> Name Type Description Default <code>custom_field_id</code> <code>str</code> The ID of the custom field required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/CustomFieldEndpoint/#updateself-custom_field_id-fields","title":"update(self, custom_field_id, fields)","text":"<p>Updates the specified custom field with the provided fields.</p> <p>Parameters:</p> Name Type Description Default <code>custom_field_id</code> <code>str</code> The ID of the custom field required <code>fields</code> <code>InputUpdateCustomField</code> An object containing the updated custom field data required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ObservableEndpoint/","title":"ObservableEndpoint","text":"<p>Class representing TheHive's observable endpoint.</p>"},{"location":"reference/endpoints/ObservableEndpoint/#create_in_alertself-alert_id-observable-observable_path","title":"create_in_alert(self, alert_id, observable, observable_path)","text":"<p>Create a new observable in an alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID of the alert to create the observable within required <code>observable</code> <code>InputObservable</code> The observable to create required <code>observable_path</code> <code>Optional[str]</code> The path to the observable file (if it's a file) None <p>Returns:</p> Type Description <code>List[OutputObservable]</code> A list containing the created observable"},{"location":"reference/endpoints/ObservableEndpoint/#create_in_caseself-case_id-observable-observable_path","title":"create_in_case(self, case_id, observable, observable_path)","text":"<p>Create a new observable in a case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case to create the observable within required <code>observable</code> <code>InputObservable</code> The observable to create required <code>observable_path</code> <code>Optional[str]</code> The path to the observable file (if it's a file) None <p>Returns:</p> Type Description <code>List[OutputObservable]</code> A list containing the created observable"},{"location":"reference/endpoints/ObservableEndpoint/#getself-observable_id","title":"get(self, observable_id)","text":"<p>Get the specified observable.</p> <p>Parameters:</p> Name Type Description Default <code>observable_id</code> <code>str</code> The ID of the observable to retrieve required <p>Returns:</p> Type Description <code>OutputObservable</code> An object containing the observable data"},{"location":"reference/endpoints/ObservableEndpoint/#deleteself-observable_id","title":"delete(self, observable_id)","text":"<p>Delete the specified observable.</p> <p>Parameters:</p> Name Type Description Default <code>observable_id</code> <code>str</code> The ID of the observable to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ObservableEndpoint/#updateself-observable_id-fields","title":"update(self, observable_id, fields)","text":"<p>Update the specified observable.</p> <p>Parameters:</p> Name Type Description Default <code>observable_id</code> <code>str</code> The ID of the observable to update required <code>fields</code> <code>InputUpdateObservable</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ObservableEndpoint/#bulk_updateself-fields","title":"bulk_update(self, fields)","text":"<p>Update multiple observables at once.</p> <p>Parameters:</p> Name Type Description Default <code>fields</code> <code>InputBulkUpdateObservable</code> he fields to update for the observables required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ObservableEndpoint/#shareself-observable_id-organisations","title":"share(self, observable_id, organisations)","text":"<p>Share an observable with a list of organisations.</p> <p>Parameters:</p> Name Type Description Default <code>observable_id</code> <code>str</code> The ID of the observable to share required <code>organisations</code> <code>List[str]</code> The list of organisations to share the observable with required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ObservableEndpoint/#unshareself-observable_id-organisations","title":"unshare(self, observable_id, organisations)","text":"<p>Unshare an observable with a list of organisations.</p> <p>Parameters:</p> Name Type Description Default <code>observable_id</code> <code>str</code> The ID of the observable to unshare required <code>organisations</code> <code>List[str]</code> The list of organisations to unshare the observable with required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ObservableEndpoint/#list_sharesself-observable_id","title":"list_shares(self, observable_id)","text":"<p>List the organisations an observable is shared with.</p> <p>Parameters:</p> Name Type Description Default <code>observable_id</code> <code>str</code> The ID of the observable required <p>Returns:</p> Type Description <code>List[OutputShare]</code> A list of share objects for the observable"},{"location":"reference/endpoints/ObservableEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Gets a list of observables based on the provided filters, sort expression, and pagination parameters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <code>sortby</code> <code>Optional[SortExpr]</code> The sort order to apply to the results None <code>paginate</code> <code>Optional[Paginate]</code> The pagination parameters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputObservable]</code> A list of observables matching the specified criteria"},{"location":"reference/endpoints/ObservableEndpoint/#countself-filters","title":"count(self, filters)","text":"<p>Count the number of observables matching the specified criteria. Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <p>Returns:</p> Type Description <code>int</code> The number of observables matching the specified criteria"},{"location":"reference/endpoints/ObservableEndpoint/#download_attachmentself-observable_id-attachment_id-observable_path-as_zip","title":"download_attachment(self, observable_id, attachment_id, observable_path, as_zip)","text":"<p>Download an attachment that belong to an observable.</p> <p>Parameters:</p> Name Type Description Default <code>observable_id</code> <code>str</code> The ID of the observable that the attachment belongs to required <code>attachment_id</code> <code>str</code> The ID of the attachment to download required <code>observable_path</code> <code>str</code> The path to save the downloaded attachment to required <code>as_zip</code> <code>str</code> If True, downloads the attachment as a zip file False <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ObservableTypeEndpoint/","title":"ObservableTypeEndpoint","text":"<p>Class representing TheHive's observable type endpoint.</p>"},{"location":"reference/endpoints/ObservableTypeEndpoint/#createself-observable_type","title":"create(self, observable_type)","text":"<p>Creates a new observable type</p> <p>Parameters:</p> Name Type Description Default <code>observable_type</code> <code>InputObservableType</code> An object containing the observable type data required <p>Returns:</p> Type Description <code>OutputObservableType</code> An object containing the created observable type data"},{"location":"reference/endpoints/ObservableTypeEndpoint/#getself-observable_type_id","title":"get(self, observable_type_id)","text":"<p>Gets the specified observable type</p> <p>Parameters:</p> Name Type Description Default <code>observable_type</code> <code>str</code> The ID of the observable type required <p>Returns:</p> Type Description <code>OutputObservableType</code> An object containing the observable type data"},{"location":"reference/endpoints/ObservableTypeEndpoint/#deleteself-observable_type_id","title":"delete(self, observable_type_id)","text":"<p>Deletes the specified observable type.</p> <p>Parameters:</p> Name Type Description Default <code>observable_type_id</code> <code>str</code> The ID of the observable type required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ObservableTypeEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Gets a list of observable types based on the provided filters, sort expression, and pagination parameters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <code>sortby</code> <code>Optional[SortExpr]</code> The sort order to apply to the results None <code>paginate</code> <code>Optional[Paginate]</code> The pagination parameters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputObservableType]</code> A list of objects containing the observable type data"},{"location":"reference/endpoints/OrganisationEndpoint/","title":"OrganisationEndpoint","text":""},{"location":"reference/endpoints/OrganisationEndpoint/#createself-organisation","title":"create(self, organisation)","text":"<p>Create a new organisation.</p> <p>Parameters:</p> Name Type Description Default <code>organisation</code> <code>InputOrganisation</code> The case to create required <p>Returns:</p> Type Description <code>OutputOrganisation</code> The created org"},{"location":"reference/endpoints/OrganisationEndpoint/#getself-org_id","title":"get(self, org_id)","text":"<p>Get an existing organisation.</p> <p>Parameters:</p> Name Type Description Default <code>org_id</code> <code>str</code> The ID of the org to retrieve required <p>Returns:</p> Type Description <code>OutputOrganisation</code> The retrieved org"},{"location":"reference/endpoints/OrganisationEndpoint/#updateself-org_id-fields","title":"update(self, org_id, fields)","text":"<p>Update an organisation.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>CaseId</code> The ID of the org to update required <code>fields</code> <code>InputUpdateOrganisation</code> The updated org required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/OrganisationEndpoint/#deleteself-org_id","title":"delete(self, org_id)","text":"<p>Delete an organisation.</p> <p>Parameters:</p> Name Type Description Default <code>org_id</code> <code>str</code> The ID of the org to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/OrganisationEndpoint/#linkself-org_id-other_org_id-link","title":"link(self, org_id, other_org_id, link)","text":"<p>Link between organisations.</p> <p>Parameters:</p> Name Type Description Default <code>org_id</code> <code>str</code> The ID of the org to link required <code>other_org_id</code> <code>str</code> The ID of the org to link with required <code>link</code> <code>InputOrganisationLink</code> the link between the org required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/OrganisationEndpoint/#unlinkself-org_id-other_org_id","title":"unlink(self, org_id, other_org_id)","text":"<p>Unlink organisations.</p> <p>Parameters:</p> Name Type Description Default <code>org_id</code> <code>str</code> The ID of the org to unlink required <code>other_org_id</code> <code>str</code> The ID of the org to unlink with required Returns: Type Description <code>None</code>"},{"location":"reference/endpoints/OrganisationEndpoint/#list_linksself-org_id","title":"list_links(self, org_id)","text":"<p>List the links of the specified organisation.</p> <p>Parameters:</p> Name Type Description Default <code>org_id</code> <code>str</code> The organisation's ID required <p>Returns:</p> Type Description <code>List[OutputOrganisation]</code> A list of <code>OutputOrganisation</code> objects representing the linked orgs"},{"location":"reference/endpoints/OrganisationEndpoint/#bulk_linksel-f-org_id-links","title":"bulk_link(sel f, org_id, links)","text":"<p>Add or update multiple links for an organization.</p> <p>Parameters:</p> Name Type Description Default <code>org_id</code> <code>str</code> The ID of the organization to add or update the links for required <code>links</code> <code>List[InputBulkOrganisationLink]</code> A list of link objects to add or update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/OrganisationEndpoint/#list_sharing_profilesself","title":"list_sharing_profiles(self)","text":"<p>Retrieve a list of sharing profiles.</p> <p>Returns:</p> Type Description <code>List[OutputSharingProfile]</code> A list of OutputSharingProfile objects containing information about the sharing profiles."},{"location":"reference/endpoints/OrganisationEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Find organisations based on the specified filters, sort order, and pagination.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <code>sortby</code> <code>Optional[SortExpr]</code> The sort order to apply to the results None <code>paginate</code> <code>Optional[Paginate]</code> The pagination parameters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputOrganisation]</code> A list of matching cases"},{"location":"reference/endpoints/OrganisationEndpoint/#countself-filters","title":"count(self, filters)","text":"<p>Count the organisations that match the specified filters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <p>Returns:</p> Type Description <code>int</code> The number of matching orgs"},{"location":"reference/endpoints/ProcedureEndpoint/","title":"ProcedureEndpoint","text":""},{"location":"reference/endpoints/ProcedureEndpoint/#create_in_alertself-alert_id-procedure","title":"create_in_alert(self, alert_id, procedure)","text":"<p>Create a procedure for a given alert.</p> <p>Parameters:</p> Name Type Description Default <code>alert_id</code> <code>str</code> The ID or name of the alert to create the procedure for required <code>procedure</code> <code>InputProcedure</code> The procedure to create required <p>Returns:</p> Type Description <code>OutputProcedure</code> The created procedure"},{"location":"reference/endpoints/ProcedureEndpoint/#create_in_caseself-case_id-procedure","title":"create_in_case(self, case_id, procedure)","text":"<p>Create a procedure for a given case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID or name of the case to create the procedure for required <code>procedure</code> <code>InputProcedure</code> The procedure to create required <p>Returns:</p> Type Description <code>OutputProcedure</code> The created procedure"},{"location":"reference/endpoints/ProcedureEndpoint/#getself-procedure_id","title":"get(self, procedure_id)","text":"<p>Retrieves a procedure.</p> <p>Parameters:</p> Name Type Description Default <code>procedure_id</code> <code>str</code> The ID of the procedure to get required <p>Returns:</p> Type Description <code>OutputProcedure</code> The retrieved procedure"},{"location":"reference/endpoints/ProcedureEndpoint/#deleteself-procedure_id","title":"delete(self, procedure_id)","text":"<p>Delete an existing procedure.</p> <p>Parameters:</p> Name Type Description Default <code>procedure_id</code> <code>str</code> The ID of the procedure to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ProcedureEndpoint/#updateself-procedure_id-fields","title":"update(self, procedure_id, fields)","text":"<p>Update an existing procedure.</p> <p>Parameters:</p> Name Type Description Default <code>procedure_id</code> <code>str</code> The ID of the procedure to update required <code>fields</code> <code>InputUpdateProcedure</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ProcedureEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Finds procedures based on filters, sort experssions and pagination.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search required <code>sortby</code> <code>Optional[SortExpr]</code> The sorting criteria to apply to the search required <code>paginate</code> <code>Optional[Paginate]</code> The pagination settings to apply to the search required <p>Returns:</p> Type Description <code>List[OutputProcedure]</code> A list of procedures associated with the given case"},{"location":"reference/endpoints/ProfileEndpoint/","title":"ProfileEndpoint","text":""},{"location":"reference/endpoints/ProfileEndpoint/#createself-profile","title":"create(self, profile)","text":"<p>Create a new profile.</p> <p>Parameters:</p> Name Type Description Default <code>profile</code> <code>InputProfile</code> The data for the new profile required <p>Returns:</p> Type Description <code>OutputProfile</code> The created profile"},{"location":"reference/endpoints/ProfileEndpoint/#getself-profile_id","title":"get(self, profile_id)","text":"<p>Get an existing profile.</p> <p>Parameters:</p> Name Type Description Default <code>profile_id</code> <code>str</code> The ID of the profile to get required <p>Returns:</p> Type Description <code>OutputProfile</code> The retrieved profile"},{"location":"reference/endpoints/ProfileEndpoint/#deleteself-profile_id","title":"delete(self, profile_id)","text":"<p>Delete an existing profile.</p> <p>Parameters:</p> Name Type Description Default <code>profile_id</code> <code>str</code> The ID of the profile to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ProfileEndpoint/#updateself-profile_id-fields","title":"update(self, profile_id, fields)","text":"<p>Update an existing profile.</p> <p>Parameters:</p> Name Type Description Default <code>profile_id</code> <code>str</code> The ID of the profile to update required <code>fields</code> <code>InputUpdateProfile</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/ProfileEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Finds profiles based on filters, sort experssions and pagination.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search required <code>sortby</code> <code>Optional[SortExpr]</code> The sorting criteria to apply to the search required <code>paginate</code> <code>Optional[Paginate]</code> The pagination settings to apply to the search required <p>Returns:</p> Type Description <code>List[OutputProfile]</code> A list of the matching profiles"},{"location":"reference/endpoints/ProfileEndpoint/#countself-filters","title":"count(self, filters)","text":"<p>Count profiles matching the given filters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search required <p>Returns:</p> Type Description <code>int</code> The number of matching profiles"},{"location":"reference/endpoints/TaskEndpoint/","title":"TaskEndpoint","text":""},{"location":"reference/endpoints/TaskEndpoint/#createself-case_id-task","title":"create(self, case_id, task)","text":"<p>Creates a new task in a given case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The case to create the task within required <code>task</code> <code>InputTask</code> The task to create required <p>Returns:</p> Type Description <code>OutputTask</code> The created task"},{"location":"reference/endpoints/TaskEndpoint/#getself-task_id","title":"get(self, task_id)","text":"<p>Retrieves an existing task .</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The ID of the task to retrieve required <p>Returns:</p> Type Description <code>OutputTask</code> The retrieved task"},{"location":"reference/endpoints/TaskEndpoint/#deleteself-task_id","title":"delete(self, task_id)","text":"<p>Deletes an existing task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The ID of the task to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TaskEndpoint/#updateself-task_id-fields","title":"update(self, task_id, fields)","text":"<p>Update an existing task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The ID of the task to update required <code>fields</code> <code>InputUpdateTask</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TaskEndpoint/#bulk_updateself-fields","title":"bulk_update(self, fields)","text":"<p>Updates multiple tasks.</p> <p>Parameters:</p> Name Type Description Default <code>fields</code> <code>InputBulkUpdateTask</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TaskEndpoint/#get_required_actionsself-task_id","title":"get_required_actions(self, task_id)","text":"<p>Retrieves the required actions for a specific task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The ID of the task to retrieve required actions for required <p>Returns:</p> Type Description <code>dict</code> A dictionary containing information about the required actions for the task"},{"location":"reference/endpoints/TaskEndpoint/#set_as_requiredself-task_id-org_id","title":"set_as_required(self, task_id, org_id)","text":"<p>Set an organization as required to take action for a specific task..</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The ID of the task to set the organization as required for required <code>org_id</code> <code>str</code> The ID of the organisation to set as required for the task. required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TaskEndpoint/#set_as_doneself-task_id-org_id","title":"set_as_done(self, task_id, org_id)","text":"<p>Set an organization as required to take action for a specific task..</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The ID of the task to set the organization as done for required <code>org_id</code> <code>str</code> The ID of the organization to mark the action as done for required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TaskEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Find tasks based on the specified filters, sort order, and pagination.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <code>sortby</code> <code>Optional[SortExpr]</code> The sort order to apply to the results None <code>paginate</code> <code>Optional[Paginate]</code> The pagination parameters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputTask]</code> A list of matching tasks"},{"location":"reference/endpoints/TaskEndpoint/#countself-filters","title":"count(self, filters)","text":"<p>Count the number of tasks that match the specified filters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <p>Returns:</p> Type Description <code>int</code> The number of matching tasks"},{"location":"reference/endpoints/TaskEndpoint/#create_logself-task_id-task_log","title":"create_log(self, task_id, task_log)","text":"<p>Creates a new task log.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The task to create the task log for required <code>task_log</code> <code>InputTaskLog</code> The task log to create required <p>Returns:</p> Type Description <code>OutputTaskLog</code> The created task log"},{"location":"reference/endpoints/TaskEndpoint/#find_logsself-task_id-filters-sortby-paginate","title":"find_logs(self, task_id, filters, sortby, paginate)","text":"<p>Find task logs based on the specified filters, sort order, and pagination.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The ID of the task to retrieve the logs for required <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the query None <code>sortby</code> <code>Optional[SortExpr]</code> The sort order to apply to the results None <code>paginate</code> <code>Optional[Paginate]</code> The pagination parameters to apply to the query None <p>Returns:</p> Type Description <code>List[OutputTaskLog]</code> A list of matching task logs"},{"location":"reference/endpoints/TaskLogEndpoint/","title":"TaskLogEndpoint","text":""},{"location":"reference/endpoints/TaskLogEndpoint/#createself-task_id-task_log","title":"create(self, task_id, task_log)","text":"<p>Create a new task log for a given task.</p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> The task to create the task log for required <code>task_log</code> <code>InputTaskLog</code> The task log to create required <p>Returns:</p> Type Description <code>OutputTaskLog</code> The created task log"},{"location":"reference/endpoints/TaskLogEndpoint/#getself-task_log_id","title":"get(self, task_log_id)","text":"<p>Retrieves an existing task log.</p> <p>Parameters:</p> Name Type Description Default <code>task_log_id</code> <code>str</code> The ID of the task log to retrieve required <p>Returns:</p> Type Description <code>OutputTaskLog</code> The retrieved task log"},{"location":"reference/endpoints/TaskLogEndpoint/#deleteself-task_log_id","title":"delete(self, task_log_id)","text":"<p>Deletes an existing task log.</p> <p>Parameters:</p> Name Type Description Default <code>task_log_id</code> <code>str</code> The ID of the task log to delete required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TaskLogEndpoint/#updateself-task_log_id-fields","title":"update(self, task_log_id, fields)","text":"<p>Update an existing task log.</p> <p>Parameters:</p> Name Type Description Default <code>task_log_id</code> <code>str</code> The ID of the task log to update required <code>fields</code> <code>InputUpdateTaskLog</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TaskLogEndpoint/#add_attachmentsself-task_log_id-attachment_paths","title":"add_attachments(self, task_log_id, attachment_paths)","text":"<p>Add one or more attachments to a task log.</p> <p>Parameters:</p> Name Type Description Default <code>task_log_id</code> <code>str</code> The ID of the task log to add the attachments to required <code>attachment_paths</code> <code>List[str]</code> A list of file paths for the attachments to add required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TaskLogEndpoint/#delete_attachmentself-task_log_id-attachment_id","title":"delete_attachment(self, task_log_id, attachment_id)","text":"<p>Delete an attachment from a task log.</p> <p>Parameters:</p> Name Type Description Default <code>task_log_id</code> <code>str</code> The task log's id required <code>attachment_id</code> <code>str</code> The attachment's id required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TimelineEndpoint/","title":"TimelineEndpoint","text":""},{"location":"reference/endpoints/TimelineEndpoint/#getself-case_id","title":"get(self, case_id)","text":"<p>Retrieves the timeline for a given case.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID of the case required <p>Returns:</p> Type Description <code>OutputTimeline</code> The retrieved procedure"},{"location":"reference/endpoints/TimelineEndpoint/#create_eventself-case_id-event","title":"create_event(self, case_id, event)","text":"<p>Creates a new event.</p> <p>Parameters:</p> Name Type Description Default <code>case_id</code> <code>str</code> The ID or name of the case to create the event for required <code>event</code> <code>InputCustomEvent</code> The event to create required <p>Returns:</p> Type Description <code>OutputCustomEvent</code> The created event"},{"location":"reference/endpoints/TimelineEndpoint/#delete_eventself-event_id","title":"delete_event(self, event_id)","text":"<p>Deletes a specified event.</p> <p>Parameters:</p> Name Type Description Default <code>event_id</code> <code>str</code> The ID of the event required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/TimelineEndpoint/#update_eventself-event_id-fields","title":"update_event(self, event_id, fields)","text":"<p>Update an existing event.</p> <p>Parameters:</p> Name Type Description Default <code>event_id</code> <code>str</code> The ID of the event to update required <code>fields</code> <code>InputUpdateCustomEvent</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/UserEndpoint/","title":"UserEndpoint","text":""},{"location":"reference/endpoints/UserEndpoint/#createselfuser","title":"create(self,user)","text":"<p>Create a new user.</p> <p>Parameters:</p> Name Type Description Default <code>user</code> <code>InputUser</code> The data for the new user required <p>Returns:</p> Type Description <code>OutputUser</code> The created profile"},{"location":"reference/endpoints/UserEndpoint/#getself-user_id","title":"get(self, user_id)","text":"<p>Retrieve a user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user to get required <p>Returns:</p> Type Description <code>OutputUser</code> The retrieved user"},{"location":"reference/endpoints/UserEndpoint/#get_currentself","title":"get_current(self)","text":"<p>Get the current user.</p> <p>Returns:</p> Type Description <code>OutputUser</code> The current user"},{"location":"reference/endpoints/UserEndpoint/#deleteself-user_id-organisation","title":"delete(self, user_id, organisation)","text":"<p>Delete an existing user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user to delete required <code>organisation</code> <code>Optional[str]</code> The ID of the user to delete None <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/UserEndpoint/#updateself-user_id-fields","title":"update(self, user_id, fields)","text":"<p>Update an existing user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user to update required <code>fields</code> <code>InputUpdateUser</code> The fields to update required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/UserEndpoint/#lockself-user_id","title":"lock(self, user_id)","text":"<p>Lock the user with the given <code>user_id</code>.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user to be locked required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/UserEndpoint/#unlockself-user_id","title":"unlock(self, user_id)","text":"<p>Unlocks the user with the given <code>user_id</code>.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user to be unlocked required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/UserEndpoint/#set_organisationsself-user_id-organisation","title":"set_organisations(self, user_id, organisation)","text":"<p>Set an organisation for a user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user whose organisations will be set required <code>organisations</code> <code>List[InputUserOrganisation]</code> A list of <code>InputUserOrganisation</code> objects representing the organisations to be set None <p>Returns:</p> Type Description <code>List[OutputUserOrganisation]</code> A list of <code>OutputUserOrganisation</code> objects representing the updated organisations"},{"location":"reference/endpoints/UserEndpoint/#set_passwordself-user_id-password","title":"set_password(self, user_id, password)","text":"<p>Set password for a user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user whose password will be set required <code>password</code> <code>str</code> The new password to be set None <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/UserEndpoint/#get_apikeyself-user_id","title":"get_apikey(self, user_id)","text":"<p>Retrieve the API key for the user with the given <code>user_id</code>.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user whose API key will be retrieved required <p>Returns:</p> Type Description <code>str</code> The API key for the user"},{"location":"reference/endpoints/UserEndpoint/#remove_apikeyself-user_id","title":"remove_apikey(self, user_id)","text":"<p>Removes the API key for the user with the given <code>user_id</code>.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user whose API key will be removed required <p>Returns:</p> Type Description <code>None</code>"},{"location":"reference/endpoints/UserEndpoint/#renew_apikeyself-user_id","title":"renew_apikey(self, user_id)","text":"<p>Renews the API key for the user with the given <code>user_id</code>.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>str</code> The ID of the user whose API key will be renewed required <p>Returns:</p> Type Description <code>str</code> The new API key for the user"},{"location":"reference/endpoints/UserEndpoint/#findself-filters-sortby-paginate","title":"find(self, filters, sortby, paginate)","text":"<p>Find users matching the given filters, sort expressions and pagination.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search required <code>sortby</code> <code>Optional[SortExpr]</code> The sorting criteria to apply to the search required <code>paginate</code> <code>Optional[Paginate]</code> The pagination settings to apply to the search required <p>Returns:</p> Type Description <code>List[OutputUser]</code> A list of the matching users"},{"location":"reference/endpoints/UserEndpoint/#countself-filters","title":"count(self, filters)","text":"<p>Count users matching the given filters.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[FilterExpr]</code> The filters to apply to the search required <p>Returns:</p> Type Description <code>int</code> The number of matching users"},{"location":"reference/models/Alert/","title":"Alert","text":""},{"location":"reference/models/Alert/#input-alert","title":"Input Alert","text":"<p>Parameters</p> Name Type Description Default <code>type</code> <code>str</code> Alert's type. Default: None required <code>source</code> <code>str</code> Alert's source. Default: None required <code>sourceRef</code> <code>str</code> Alert's source reference. Used to specify the unique identifier of the alert. Default: None required <code>title</code> <code>str</code> Alert's title. Default: None required <code>description</code> <code>str</code> Alert's description. Default: None required <code>date</code> <code>int</code> Alert's occur date. Default: <code>Now()</code> Not required <code>externalLink</code> <code>str</code> Alert's external link. Used to easily navigate to the source of the alert. Default: None Not required <code>severity</code> <code>int</code> Alert's severity: <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code> for <code>LOW</code>, <code>MEDIUM</code>, <code>HIGH</code>, <code>CRTICAL</code>. Default: <code>2</code> Not required <code>tags</code> <code>List[str]</code> List of alert tags. Default: <code>[]</code> Not required <code>flags</code> <code>bool</code> Alert's flag, <code>True</code> to mark the alert as important. Default: <code>False</code> Not required <code>tlp</code> <code>int</code> Alert's TLP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> Not required <code>pap</code> <code>int</code> Alert's PAP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> Not required <code>customFields</code> <code>List[InputCustomFieldValue]</code> A set of CustomField instances, or the result of a <code>CustomFieldHelper.build()</code> method. Default: <code>{}</code> Not required <code>summary</code> <code>str</code> Alert's summary Not required <code>status</code> <code>str</code> Alert's status Not required <code>caseTemplate</code> <code>str</code> Alert template's name. Default: <code>None</code> Not required <code>observables</code> <code>List[InputObservables]</code> Not required"},{"location":"reference/models/Alert/#output-alert","title":"Output Alert","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> <code>The alert's id</code> <code>required</code> <code>_type</code> <code>str</code> <code></code> <code>required</code> <code>_createdBy</code> <code>str</code> <code>the profile that created the alert</code> <code>required</code> <code>_createdAt</code> <code>int</code> <code>The creation date of the alert</code> <code>required</code> <code>type</code> <code>str</code> <code></code> <code>required</code> <code>source</code> <code>str</code> <code></code> <code>required</code> <code>sourceRef</code> <code>str</code> <code></code> <code>required</code> <code>title</code> <code>str</code> <code></code> <code>required</code> <code>description</code> <code>str</code> <code></code> <code>required</code> <code>severity</code> <code>int</code> <code></code> <code>required</code> <code>date</code> <code>int</code> <code></code> <code>required</code> <code>tlp</code> <code>int</code> <code></code> <code>required</code> <code>pap</code> <code>int</code> <code></code> <code>required</code> <code>follow</code> <code>bool</code> <code></code> <code>required</code> <code>observableCount</code> <code>int</code> <code></code> <code>required</code> <code>status</code> <code>str</code> <code></code> <code>required</code> <code>stage</code> <code>str</code> <code></code> <code>required</code> <code>extraData</code> <code>dict</code> <code></code> <code>required</code> <code>newData</code> <code>int</code> <code></code> <code>required</code> <code>timeToDetect</code> <code>int</code> <code></code> <code>required</code> <code>_updatedBy</code> <code>str</code> <code></code> <code>Not required</code> <code>_updatedAt</code> <code>int</code> <code></code> <code>Not required</code> <code>externalLink</code> <code>str</code> <code></code> <code>Not required</code> <code>tags</code> <code>List[str]</code> <code></code> <code>Not required</code> <code>customFields</code> <code>List[OutputCustomFieldValue]</code> <code></code> <code>Not required</code> <code>caseTemplate</code> <code>str</code> <code></code> <code>Not required</code> <code>caseId</code> <code>str</code> <code></code> <code>Not required</code> <code>summary</code> <code>str</code> <code></code> <code>Not required</code> <code>inProgressDate</code> <code>int</code> <code></code> <code>Not required</code> <code>closeDate</code> <code>int</code> <code></code> <code>Not required</code> <code>importDate</code> <code>int</code> <code></code> <code>Not required</code> <code>timeToTriage</code> <code>int</code> <code></code> <code>Not required</code> <code>timeToQualify</code> <code>int</code> <code></code> <code>Not required</code> <code>timeToAcknowledge</code> <code>int</code> <code></code> <code>Not required</code>"},{"location":"reference/models/Alert/#inputupdatealert","title":"InputUpdateAlert","text":"<p>Parameters</p> Name Type Description Default <code>type</code> <code>str</code> <code></code> <code>required</code> <code>source</code> <code>str</code> <code></code> <code>required</code> <code>sourceRef</code> <code>str</code> <code></code> <code>required</code> <code>externalLink</code> <code>str</code> <code></code> <code>required</code> <code>title</code> <code>str</code> <code></code> <code>required</code> <code>description</code> <code>str</code> <code></code> <code>required</code> <code>severity</code> <code>int</code> <code></code> <code>required</code> <code>date</code> <code>int</code> <code></code> <code>required</code> <code>lastSyncDate</code> <code>int</code> <code></code> <code>required</code> <code>tags</code> <code>List[str]</code> <code></code> <code>required</code> <code>tlp</code> <code>int</code> <code></code> <code>required</code> <code>pap</code> <code>int</code> <code></code> <code>required</code> <code>follow</code> <code>bool</code> <code></code> <code>required</code> <code>customFields</code> <code>List[InputCustomFieldValue]</code> <code></code> <code>required</code> <code>status</code> <code>str</code> <code></code> <code>required</code> <code>summary</code> <code>str</code> <code></code> <code>required</code> <code>ids</code> <code>List[str]</code> <code>For Bulk update only</code> <code>required</code>"},{"location":"reference/models/Alert/#inputpromotealert","title":"InputPromoteAlert","text":"<p>Parameters</p> Name Type Description Default <code>title</code> <code>str</code> <code></code> <code>required</code> <code>description</code> <code>str</code> <code></code> <code>required</code> <code>severity</code> <code>int</code> <code></code> <code>required</code> <code>startDate</code> <code>int</code> <code></code> <code>required</code> <code>endDate</code> <code>int</code> <code></code> <code>required</code> <code>tags</code> <code>List[str]</code> <code></code> <code>required</code> <code>flag</code> <code>bool</code> <code></code> <code>required</code> <code>tlp</code> <code>int</code> <code></code> <code>required</code> <code>pap</code> <code>int</code> <code></code> <code>required</code> <code>status</code> <code>str</code> <code></code> <code>required</code> <code>summary</code> <code>str</code> <code></code> <code>required</code> <code>assignee</code> <code>str</code> <code></code> <code>required</code> <code>customFields</code> <code>List[InputCustomFieldValue]</code> <code></code> <code>required</code> <code>caseTemplate</code> <code>str</code> <code></code> <code>required</code> <code>tasks</code> <code>List[InputTask]</code> <code></code> <code>required</code> <code>sharingParameters</code> <code>List[InputShare]</code> <code></code> <code>required</code> <code>taskRule</code> <code>str</code> <code></code> <code>required</code> <code>observableRule</code> <code>str</code> <code></code> <code>required</code>"},{"location":"reference/models/Attachment/","title":"Attachment","text":""},{"location":"reference/models/Attachment/#output-attachment","title":"Output Attachment","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Attachments's id required <code>_type</code> <code>str</code> Attachments's type required <code>_createdBy</code> <code>str</code> The attachmnet's creator required <code>_createdAt</code> <code>int</code> Attachments's creation date required <code>name</code> <code>str</code> Attachmnent's name required <code>size</code> <code>int</code> Attachment's size required <code>contentType</code> <code>str</code> Attachments's content type required <code>id</code> <code>str</code> Attachment's id required <code>_updatedBy</code> <code>str</code> The user that updated the attachment Not required <code>_updatedAt</code> <code>int</code> The attachment's update date Not required <code>hashes</code> <code>List[str]</code> The attachment's hashes Not required"},{"location":"reference/models/Case/","title":"Case","text":""},{"location":"reference/models/Case/#casestatusvalue","title":"CaseStatusValue","text":"<p>Possible values for the status of a case : <code>New</code>, <code>InProgress</code>, <code>Indeterminate</code>, <code>FalsePositive</code>, <code>TruePositive</code>, <code>Other</code>, <code>Duplicated</code>.</p>"},{"location":"reference/models/Case/#input-case","title":"Input Case","text":"<p>Parameters</p> Name Type Description Default <code>title</code> <code>str</code> Case's title. Default: None required <code>description</code> <code>str</code> Case's description. Default: None required <code>severity</code> <code>int</code> Case's severity: <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code> for <code>LOW</code>, <code>MEDIUM</code>, <code>HIGH</code>, <code>CRTICAL</code>. Default: <code>2</code> Not required <code>tags</code> <code>List[str]</code> List of case tags. Default: <code>[]</code> Not required <code>flags</code> <code>bool</code> Case's flag, <code>True</code> to mark the case as important. Default: <code>False</code> Not required <code>tlp</code> <code>int</code> Case's TLP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> Not required <code>pap</code> <code>int</code> Case's PAP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> Not required <code>status</code> <code>CaseStatusValue</code> Case's status Not required <code>summary</code> <code>str</code> Case's summary Not required <code>assignee</code> <code>str</code> Case's assignee Not required <code>customFields</code> <code>List[InputCustomFieldValue]</code> A set of CustomField instances, or the result of a <code>CustomFieldHelper.build()</code> method. Default: <code>{}</code> Not required <code>caseTemplate</code> <code>str</code> Case template's name. If specified then the case is created using the given template. Default: <code>None</code> Not required <code>tasks</code> <code>List[InputTask]</code> Set of tasks, defined as InputTask instances Not required <code>sharingParameters</code> <code>List[InoputShare]</code> Defined as InputShare instances Not required <code>taskRule</code> <code>str</code> Not required <code>observablesRule</code> <code>str</code> Not required"},{"location":"reference/models/Case/#output-case","title":"Output Case","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> <code></code> <code>required</code> <code>_type</code> <code>str</code> <code></code> <code>required</code> <code>_createdBy</code> <code>str</code> <code>The profile that created the case</code> <code>required</code> <code>_createdAt</code> <code>int</code> <code>The creation date of the case</code> <code>required</code> <code>number</code> <code>int</code> <code>The case's number</code> <code>required</code> <code>title</code> <code>str</code> <code>The case's title</code> <code>required</code> <code>description</code> <code>str</code> <code>The case's description</code> <code>required</code> <code>severity</code> <code>int</code> <code>Case's severity:</code>1<code>,</code>2<code>,</code>3<code>,</code>4<code>for</code>LOW<code>,</code>MEDIUM<code>,</code>HIGH<code>,</code>CRTICAL<code>. Default:</code>2<code>|</code>required ``` <code>startDate</code> <code>int</code> <code>The case's start date</code> <code>required</code> <code>flag</code> <code>bool</code> <code>Case's flag,</code>True<code>to mark the case as important. Default:</code>False<code></code> <code>required</code> <code>tlp</code> <code>int</code> <code>Case's TLP:</code>0<code>,</code>1<code>,</code>2<code>,</code>3<code>for</code>WHITE<code>,</code>GREEN<code>,</code>AMBER<code>,</code>RED<code>. Default:</code>2<code>|</code>required ``` <code>pap</code> <code>int</code> <code>Case's PAP:</code>0<code>,</code>1<code>,</code>2<code>,</code>3<code>for</code>WHITE<code>,</code>GREEN<code>,</code>AMBER<code>,</code>RED<code>. Default:</code>2<code></code> <code>required</code> <code>status</code> <code>CaseStatusValue</code> <code>The case's status</code> <code>required</code> <code>stage</code> <code>str</code> <code></code> <code>required</code> <code>extraData</code> <code>dict</code> <code></code> <code>required</code> <code>newData</code> <code>int</code> <code></code> <code>required</code> <code>timeToDetect</code> <code>int</code> <code></code> <code>required</code> <code>_updatedBy</code> <code>str</code> <code>The profile that updated the case</code> <code>Not required</code> <code>_updatedAt</code> <code>int</code> <code>The date the case was updated</code> <code>Not required</code> <code>endDate</code> <code>int</code> <code>The case's end date</code> <code>Not required</code> <code>tags</code> <code>List[str]</code> <code></code> <code>Not required</code> <code>summary</code> <code>str</code> <code>Case's summary</code> <code>Not required</code> <code>impactStatus</code> <code>ImpactStatusValue</code> <code></code> <code>Not required</code> <code>assignee</code> <code>str</code> <code>The profile(s) assigned to the case</code> <code>Not required</code> <code>customFields</code> <code>List[OutputCustomFieldValue]</code> <code></code> <code>Not required</code> <code>userPermissions</code> <code>List[str]</code> <code></code> <code>Not required</code> <code>inProgressDate</code> <code>int</code> <code></code> <code>Not required</code> <code>closeDate</code> <code>int</code> <code></code> <code>Not required</code> <code>alertDate</code> <code>int</code> <code></code> <code>Not required</code> <code>alertNewDate</code> <code>int</code> <code></code> <code>Not required</code> <code>alertInProgressDate</code> <code>int</code> <code></code> <code>Not required</code> <code>alertImportedDate</code> <code>int</code> <code></code> <code>Not required</code> <code>timeToTriage</code> <code>int</code> <code></code> <code>Not required</code> <code>timeToQualify</code> <code>int</code> <code></code> <code>Not required</code> <code>timeToAcknowledge</code> <code>int</code> <code></code> <code>Not required</code> <code>timeToResolve</code> <code>int</code> <code></code> <code>Not required</code> <code>handlingDuration</code> <code>int</code> <code></code> <code>Not required</code>"},{"location":"reference/models/CustomField/","title":"Custom Field","text":""},{"location":"reference/models/CustomField/#input-custom-field","title":"Input Custom Field","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> Name of the custom field required <code>group</code> <code>str</code> Group of the custom field required <code>description</code> <code>str</code> Description of the custom field required <code>type</code> <code>str</code> type of the field, possible values are <code>string</code>, <code>boolean</code>, <code>number</code>, <code>date</code>, <code>integer</code>, <code>float</code> required <code>displayName</code> <code>str</code> Display name of the custom field Not required <code>mandatory</code> <code>bool</code> True if the field is mandatory Not required <code>option</code> <code>list</code> list of possible values for the field Not required"},{"location":"reference/models/CustomField/#outputcustom-field","title":"OutputCustom Field","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Custom field's ID required <code>_type</code> <code>str</code> Custom field's type required <code>_createdBy</code> <code>str</code> Custom field creator required <code>_createdAt</code> <code>int</code> Custom field's creation date required <code>name</code> <code>str</code> Custom field's name required <code>displayName</code> <code>str</code> Display name of the custom field required <code>group</code> <code>str</code> Custom field's group required <code>description</code> <code>str</code> Custom field's description required <code>type</code> <code>str</code> Custom field's type required <code>mandatory</code> <code>bool</code> True if the field is mandatory Default value = false <code>_updatedBy</code> <code>str</code> The user that updated the custom field Not required <code>_updatedAt</code> <code>int</code> The date the custom field was updated Not required <code>options</code> <code>list</code> Custom field's options Not required"},{"location":"reference/models/CustomField/#input-custom-field-value","title":"Input Custom Field Value","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> Name of the custom field required <code>value</code> <code>Any</code> Value of the custom field Not required <code>order</code> <code>int</code> Order of the custom field Not required"},{"location":"reference/models/CustomField/#output-custom-field-value","title":"Output Custom Field Value","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Custom field's ID required <code>name</code> <code>str</code> Custom field's name required <code>description</code> <code>str</code> Custom field's description required <code>type</code> <code>str</code> Custom field's type required <code>value</code> <code>Any</code> Custom field's value required <code>order</code> <code>int</code> Custom field's order required"},{"location":"reference/models/CustomField/#input-update-custom-field","title":"Input Update Custom Field","text":"<p>Parameters</p> Name Type Description Default <code>displayName</code> <code>str</code> Custom field's display name required <code>group</code> <code>str</code> Custom field's group required <code>description</code> <code>str</code> Custom field's description required <code>type</code> <code>str</code> Custom field's type required <code>options</code> <code>list</code> Custom field's options required <code>mandatory</code> <code>bool</code> True if the field is mandatory Default value = False"},{"location":"reference/models/Observable/","title":"Observable","text":""},{"location":"reference/models/Observable/#input-observable","title":"Input Observable","text":"<p>Parameters</p> Name Type Description Default <code>dataType</code> <code>str</code> Observable's data type required <code>data</code> <code>str</code> Observable's data required <code>message</code> <code>str</code> Observable's description Not required <code>StartDate</code> <code>int</code> Observable's start date Not required <code>tlp</code> <code>int</code> Observable's TLP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> Not required <code>pap</code> <code>int</code> Observable's PAP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> Not required <code>tags</code> <code>List[str]</code> List of observable tags Not required <code>ioc</code> <code>bool</code> Observable's ioc flag, <code>True</code> to mark an observable as IOC. Default: <code>False</code> Not required <code>sighted</code> <code>bool</code> Observable's sighted flag, <code>True</code> to mark the observable as sighted. Default: <code>False</code> Not required <code>sightedAt</code> <code>int</code> The date of the observable's sighting Not required <code>ignoreSimilarity</code> <code>bool</code> Observable's similarity ignore flag. <code>True</code> to ignore the observable during similarity computing Not required <code>isZip</code> <code>bool</code> <code>True</code> to mark the observable a zip Not required <code>zipPassword</code> <code>bool</code> <code>True</code> to mark the password-protected zip Not required <code>attachment</code> <code>str</code> The observable's attachment Not required"},{"location":"reference/models/Observable/#output-observable","title":"Output Observable","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Observable's id required <code>_type</code> <code>str</code> Observable's type required <code>_createdBy</code> <code>str</code> The user that created the observable required <code>_createdAt</code> <code>int</code> Observable's creation date required <code>datatype</code> <code>str</code> Observable's datatype required <code>startDate</code> <code>int</code> Observable's start date required <code>tlp</code> <code>int</code> Observable's TLP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> required <code>pap</code> <code>int</code> Observable's PAP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> required <code>ioc</code> <code>bool</code> Observable's ioc flag, <code>True</code> to mark an observable as IOC. Default: <code>False</code> required <code>sighted</code> <code>bool</code> Observable's sighted flag, <code>True</code> to mark the observable as sighted. Default: <code>False</code> required <code>reports</code> <code>dict</code> Observable's reports required <code>extraData</code> <code>dict</code> Observable's extraData required <code>ignoreSimilarity</code> <code>bool</code> Ignore similar observables required <code>_updatedBy</code> <code>str</code> The user that updated the observable Not required <code>_updatedAt</code> <code>int</code> Observablel's update date Not required <code>data</code> <code>str</code> The observable's data Not required <code>attachment</code> <code>OutputAttachment</code> The observable's attachment Not required <code>tags</code> <code>List[str]</code> The observable's tags Not required <code>sightedAt</code> <code>int</code> The observable's sighted flag,  <code>True</code> to mark an observable as IOC. Default: <code>False</code> Not required <code>message</code> <code>str</code> The observable's message Not required"},{"location":"reference/models/Observable/#input-update-observable","title":"Input Update Observable","text":"<p>Parameters</p> Name Type Description Default <code>datatype</code> <code>str</code> Observable's datatype required <code>message</code> <code>str</code> The observable's message required <code>tlp</code> <code>int</code> Observable's TLP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> required <code>pap</code> <code>int</code> Observable's PAP: <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code> for <code>WHITE</code>, <code>GREEN</code>, <code>AMBER</code>, <code>RED</code>. Default: <code>2</code> required <code>tags</code> <code>List[str]</code> List of observable tags required <code>ioc</code> <code>bool</code> Observable's ioc flag, <code>True</code> to mark an observable as IOC. Default: <code>False</code> required <code>sighted</code> <code>bool</code> Observable's sighted flag, <code>True</code> to mark the observable as sighted. Default: <code>False</code> required <code>sightedAt</code> <code>int</code> The observable's sighted flag,  <code>True</code> to mark an observable as IOC. Default: <code>False</code> required <code>ignoreSimilarity</code> <code>bool</code> Ignore similar observables required"},{"location":"reference/models/ObservableType/","title":"ObservableType","text":""},{"location":"reference/models/ObservableType/#input-observable-type","title":"Input Observable type","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> ObservableType's name required <code>isAttachment</code> <code>bool</code> <code>True</code> to mark it as an attachment Not required"},{"location":"reference/models/ObservableType/#output-observable-type","title":"Output Observable type","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> ObservableType's id required <code>_type</code> <code>str</code> ObservableType's type required <code>_createdBy</code> <code>str</code> ObservableType's creator required <code>_createdAt</code> <code>int</code> ObservableType's creation date required <code>name</code> <code>str</code> ObservableType's name required <code>isAttachment</code> <code>bool</code> <code>True</code> to mark it as an attachment required <code>_updatedBy</code> <code>str</code> The user that updated the observable type Not required <code>_updatedAt</code> <code>int</code> ObservableType's update date Not required"},{"location":"reference/models/Organisation/","title":"Organisation","text":""},{"location":"reference/models/Organisation/#input-organisation","title":"Input Organisation","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> Organisation's name               \u00a0\u00a0 required <code>description</code> <code>str</code> Organisation's description Not required <code>taskRule</code> <code>str</code> Task rule Not required <code>observableRule</code> <code>str</code> Observable rule Not required <code>locked</code> <code>bool</code> <code>True</code>to mark it as locked Not required"},{"location":"reference/models/Organisation/#output-organisation","title":"Output Organisation","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Organisation's id               \u00a0\u00a0 required <code>_type</code> <code>str</code> Organisation's type               \u00a0\u00a0 required <code>_createdBy</code> <code>str</code> Organisation's creator               \u00a0\u00a0 required <code>_createdAt</code> <code>str</code> Organisation's creation date            \u00a0\u00a0 required <code>name</code> <code>str</code> Organisation's name               \u00a0\u00a0 required <code>description</code> <code>str</code> Organisation's description required <code>taskRule</code> <code>str</code> Task rule required <code>observableRule</code> <code>str</code> Observable rule required <code>locked</code> <code>bool</code> <code>True</code>to mark it as locked required <code>extraData</code> <code>dict</code> Organisation's extradata        \u00a0\u00a0 required <code>_updatedBy</code> <code>str</code> The user that updated the organisation Not required <code>_updatedAt</code> <code>int</code> Update date Not required <code>links</code> <code>List[InputOrganisationLink]</code> Organisation's links Not required <code>avatar</code> <code>str</code> Organisation's avatar        \u00a0\u00a0 Not required"},{"location":"reference/models/Organisation/#input-update-organisation","title":"Input Update Organisation","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> Organisation's name               \u00a0\u00a0 required <code>description</code> <code>str</code> Organisation's description required <code>taskRule</code> <code>str</code> Task rule required <code>observableRule</code> <code>str</code> Observable rule required <code>locked</code> <code>bool</code> <code>True</code>to mark it as locked required <code>avatar</code> <code>str</code> Organisation's avatar        \u00a0\u00a0 required"},{"location":"reference/models/Organisation/#input-organisation-link","title":"Input Organisation Link","text":"<p>Parameters</p> Name Type Description Default <code>linkType</code> <code>str</code> Organisation's link type               \u00a0\u00a0 required <code>otherLinkType</code> <code>str</code> Other organisations link type required"},{"location":"reference/models/Organisation/#input-bulk-organisation-link","title":"Input Bulk Organisation Link","text":"<p>Parameters</p> Name Type Description Default <code>toOrganisation</code> <code>str</code> required <code>linkType</code> <code>str</code> Organisation's link type               \u00a0\u00a0 required <code>otherLinkType</code> <code>str</code> Other organisations link type required"},{"location":"reference/models/Organisation/#output-sharing-profile","title":"Output Sharing Profile","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> Profile's name               \u00a0\u00a0 required <code>description</code> <code>str</code> Profile's description required <code>autoShare</code> <code>bool</code> Auto share profile required <code>editable</code> <code>bool</code> Editable profile required <code>permissionProfile</code> <code>str</code> Profile's permission required <code>taskRule</code> <code>str</code> Task rule    \u00a0\u00a0 required <code>observableRule</code> <code>str</code> Observable rule        \u00a0\u00a0 required"},{"location":"reference/models/Procedure/","title":"Procedure","text":""},{"location":"reference/models/Procedure/#input-procedure","title":"Input Procedure","text":"<p>Parameters</p> Name Type Description Default <code>occurDate</code> <code>int</code> Procedure occurence date              \u00a0\u00a0 required <code>tactic</code> <code>str</code> Procedure's tactic required <code>patternId</code> <code>str</code> Procedure's pattern required <code>description</code> <code>str</code> Procedure's description Not required"},{"location":"reference/models/Procedure/#output-procedure","title":"Output Procedure","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Procedure's id           \u00a0\u00a0 required <code>_createdAt</code> <code>int</code> Procedure's creation date required <code>_createdBy</code> <code>str</code> Procedure's creator required <code>occurDate</code> <code>int</code> Procedure's occur date required <code>tactic</code> <code>str</code> Procedure's tactic required <code>tacticLabel</code> <code>str</code> Procedure's tactiv labled required <code>extraData</code> <code>dict</code> Procedure's extra data required <code>_updatedAt</code> <code>int</code> Procedure's updated date Not required <code>_updatedBy</code> <code>str</code> The user that updated the procedure Not required <code>description</code> <code>str</code> Procedure's description Not required <code>patternId</code> <code>str</code> Procedure's pattern ID Not required <code>patternName</code> <code>str</code> Procedure's pattern name Not required"},{"location":"reference/models/Procedure/#input-update-procedure","title":"Input Update Procedure","text":"<p>Parameters</p> Name Type Description Default <code>description</code> <code>str</code> Procedure's description to update required <code>occurDate</code> <code>int</code> Procedure occurence date              \u00a0\u00a0 required"},{"location":"reference/models/Profile/","title":"Profile","text":""},{"location":"reference/models/Profile/#input-profile","title":"Input Profile","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> Profile's name              \u00a0\u00a0 required <code>permissions</code> <code>List[str]</code> List of profile's permissions Not required"},{"location":"reference/models/Profile/#output-profile","title":"Output Profile","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Profile's id           \u00a0\u00a0 required <code>_type</code> <code>str</code> Profile's type required <code>_createdAt</code> <code>int</code> Profile's creation date required <code>_createdBy</code> <code>str</code> Profile's creator required <code>name</code> <code>str</code> Profile's name required <code>editable</code> <code>bool</code> <code>True</code> to make the profile editable required <code>isAdmin</code> <code>bool</code> <code>True</code> to make the profile as an admin required <code>_updatedAt</code> <code>int</code> Profile's updated date Not required <code>_updatedBy</code> <code>str</code> The user that updated the profile Not required <code>permissions</code> <code>List[str]</code> Profile's permissions Not required"},{"location":"reference/models/Profile/#input-update-profile","title":"Input Update Profile","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> Profile's name  to update            \u00a0\u00a0 required <code>permissions</code> <code>List[str]</code> List of profile's permissions to update Not required"},{"location":"reference/models/Share/","title":"Share","text":""},{"location":"reference/models/Share/#input-share","title":"Input Share","text":"<p>Parameters</p> Name Type Description Default <code>organisation</code> <code>str</code> Organisation to share with required <code>share</code> <code>bool</code> <code>True</code>to share. Default: <code>False</code> Not required <code>profile</code> <code>str</code> Not required <code>taskRule</code> <code>str</code> Not required <code>observableRule</code> <code>str</code> Not required"},{"location":"reference/models/Share/#output-share","title":"Output Share","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Share's id           \u00a0\u00a0 required <code>_type</code> <code>str</code> Share's type required <code>_createdAt</code> <code>int</code> Share's creation date required <code>_createdBy</code> <code>str</code> Share's creator required <code>caseId</code> <code>str</code> Share's ID required <code>profileName</code> <code>str</code> The profile's name to share with required <code>organisationName</code> <code>str</code> Organisation to share with required <code>owner</code> <code>bool</code> required <code>taskRule</code> <code>str</code> Task rule required <code>observableRule</code> <code>str</code> Observable rule required <code>_updatedAt</code> <code>int</code> Share's updated date Not required <code>_updatedBy</code> <code>str</code> The user that updated the share Not required"},{"location":"reference/models/Task/","title":"Task","text":""},{"location":"reference/models/Task/#input-task","title":"Input Task","text":"<p>Parameters</p> Name Type Description Default <code>title</code> <code>str</code> Task's title. Default: None required <code>group</code> <code>str</code> Task's group. Not required <code>description</code> <code>str</code> Task's description. Default: None Not required <code>status</code> <code>str</code> Task's status: <code>Waiting</code>, <code>InProgress</code>, <code>Cancel</code>, <code>Completed</code>. Default: <code>Waiting</code> Not required <code>flag</code> <code>bool</code> Task's flag, <code>True</code> to mark the task as important. Default: <code>False</code> Not required <code>startDate</code> <code>int</code> Task's start date Default: None Not required <code>endDate</code> <code>int</code> Task's end date Default: None Not required <code>order</code> <code>int</code> Task's start date Default: None Not required <code>dueDate</code> <code>int</code> Task's due date Default: None Not required <code>assignee</code> <code>str</code> Task's assignee Not required"},{"location":"reference/models/Task/#output-task","title":"Output Task","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Task's title. Default: None required <code>_type</code> <code>str</code> Task's group. required <code>_createdBy</code> <code>str</code> Task's creator required <code>_createdAt</code> <code>int</code> Task's creation date Not required <code>group</code> <code>str</code> Task's group required <code>status</code> <code>str</code> Task's status: <code>Waiting</code>, <code>InProgress</code>, <code>Cancel</code>, <code>Completed</code>. Default: <code>Waiting</code> required <code>flag</code> <code>bool</code> Task's flag, <code>True</code> to mark the task as important. Default: <code>False</code> required <code>order</code> <code>int</code> Task's order required <code>extraData</code> <code>dict</code> Task's extra data required <code>_updateBy</code> <code>str</code> The user that updated the task Not required <code>_updateAt</code> <code>int</code> Task's update date Not required <code>description</code> <code>str</code> Task's description Not required <code>startDate</code> <code>int</code> Task's start date Not  required <code>endDate</code> <code>int</code> Task's end date Not required <code>assignee</code> <code>str</code> Task's assignee Not required <code>dueDate</code> <code>int</code> Task's due date Not required"},{"location":"reference/models/Task/#input-update-task","title":"Input Update Task","text":"<p>Parameters</p> Name Type Description Default <code>title</code> <code>str</code> Task's title required <code>group</code> <code>str</code> Task's group Not required <code>description</code> <code>str</code> Task's description Not required <code>status</code> <code>str</code> Task's status: <code>Waiting</code>, <code>InProgress</code>, <code>Cancel</code>, <code>Completed</code>. Default: <code>Waiting</code> Not required <code>flag</code> <code>bool</code> Task's flag, <code>True</code> to mark the task as important. Default: <code>False</code> Not required <code>startDate</code> <code>int</code> Task's start date Not required <code>endDate</code> <code>int</code> Task's end date Not required <code>order</code> <code>int</code> Task's start date Not required <code>dueDate</code> <code>int</code> Task's due date Not required <code>assignee</code> <code>str</code> Task's assignee Not required"},{"location":"reference/models/TaskLog/","title":"TaskLog","text":""},{"location":"reference/models/TaskLog/#input-tasklog","title":"Input TaskLog","text":"<p>Parameters</p> Name Type Description Default <code>message</code> <code>str</code> Log's description. Default: None required <code>startDate</code> <code>int</code> Log's start date Not required <code>includeInTimeLine</code> <code>int</code> Not required"},{"location":"reference/models/TaskLog/#output-tasklog","title":"Output TaskLog","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Task log's id           \u00a0\u00a0 required <code>_type</code> <code>str</code> Task log's type required <code>_createdAt</code> <code>int</code> Task log's creation date required <code>_createdBy</code> <code>str</code> Task log's creator required <code>message</code> <code>str</code> Log's description. Default: None required <code>date</code> <code>int</code> Log's date required <code>owner</code> <code>str</code> Log's owner required <code>extraData</code> <code>dict</code> Log's extra data required <code>_updatedBy</code> <code>str</code> The user that updated the log Not required <code>_updatedAt</code> <code>int</code> Log's update date Not required <code>attachments</code> <code>List[dict]</code> Log's attachments Not required <code>includeInTimeline</code> <code>int</code> Include log in timeline Not required"},{"location":"reference/models/TaskLog/#input-update-tasklog","title":"Input Update TaskLog","text":"<p>Parameters</p> Name Type Description Default <code>message</code> <code>str</code> Log's description. required <code>includeInTimeLine</code> <code>int</code> Include log in timeline Not required"},{"location":"reference/models/timeline/","title":"CustomEvent","text":""},{"location":"reference/models/timeline/#input-custom-event","title":"Input Custom Event","text":"<p>Parameters</p> Name Type Description Default <code>date</code> <code>int</code> Event's date             \u00a0\u00a0 required <code>title</code> <code>str</code> Event's title required <code>endDate</code> <code>int</code> Event's end date required <code>description</code> <code>str</code> event's description Not required"},{"location":"reference/models/timeline/#output-custom-event","title":"Output Custom Event","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> Event's id           \u00a0\u00a0 required <code>_type</code> <code>str</code> Event's type required <code>_createdAt</code> <code>int</code> Event's creation date required <code>_createdBy</code> <code>str</code> Event's creator required <code>date</code> <code>int</code> Event's date required <code>title</code> <code>str</code> Event's title required <code>_updatedBy</code> <code>str</code> The user that updated the event Not required <code>_updatedAt</code> <code>int</code> Event's update date Not required <code>endDate</code> <code>int</code> Event's end date Not required <code>description</code> <code>str</code> event's description Not required"},{"location":"reference/models/timeline/#input-update-custom-event","title":"Input Update Custom Event","text":"<p>Parameters</p> Name Type Description Default <code>date</code> <code>int</code> Event's date             \u00a0\u00a0 required <code>title</code> <code>str</code> Event's title required <code>endDate</code> <code>int</code> Event's end date required <code>description</code> <code>str</code> event's description Not required"},{"location":"reference/models/timeline/#output-timeline-event","title":"Output Timeline Event","text":"<p>Parameters</p> Name Type Description Default <code>date</code> <code>int</code> Timeline's date             \u00a0\u00a0 required <code>kind</code> <code>str</code> Timeline's kind required <code>entity</code> <code>str</code> Timeline's entity required <code>entityId</code> <code>str</code> Timeline entity's ID Not required <code>details</code> <code>dict</code> Timeline details required <code>endDate</code> <code>int</code> Timeline end date Not required"},{"location":"reference/models/timeline/#output-timeline","title":"Output Timeline","text":"<p>Parameters</p> Name Type Description Default <code>events</code> <code>List[OutputTimelineEvent]</code> Timeline's events           \u00a0\u00a0 required"},{"location":"reference/models/user/","title":"User","text":""},{"location":"reference/models/user/#input-user","title":"Input User","text":"<p>Parameters</p> Name Type Description Default <code>login</code> <code>str</code> User's login              \u00a0\u00a0 required <code>name</code> <code>str</code> User's name required <code>profile</code> <code>str</code> User's profile required <code>email</code> <code>str</code> User's email Not required <code>password</code> <code>str</code> User's password Not required <code>organisation</code> <code>str</code> User's organisation Not required <code>type</code> <code>str</code> User's type Not required"},{"location":"reference/models/user/#output-organisation-profile","title":"Output Organisation Profile","text":"<p>Parameters</p> Name Type Description Default <code>organisationId</code> <code>str</code> Organisation's ID required <code>organisation</code> <code>str</code> Organisation required <code>profile</code> <code>str</code> Organisation's profile Not required"},{"location":"reference/models/user/#output-user","title":"Output User","text":"<p>Parameters</p> Name Type Description Default <code>_id</code> <code>str</code> User's id            \u00a0\u00a0 required <code>_createdBy</code> <code>str</code> User's creator required <code>_createdAt</code> <code>int</code> User's creation date required <code>login</code> <code>str</code> User's login required <code>name</code> <code>str</code> User's name required <code>hasKey</code> <code>bool</code> <code>True</code> if the user has a key required <code>hasPassword</code> <code>bool</code> <code>True</code> if the user has a password required <code>hasMFA</code> <code>bool</code> <code>True</code> if the user has an MFA required <code>locked</code> <code>bool</code> <code>True</code> is the user is locked required <code>profile</code> <code>str</code> User's profile required <code>organisation</code> <code>str</code> User's organisation required <code>type</code> <code>str</code> User's type required <code>extraData</code> <code>dict</code> User's extra data required <code>_updatedBy</code> <code>str</code> The user that updated the user Not required <code>_updatedAt</code> <code>int</code> The user's update date Not required <code>email</code> <code>str</code> User's email Not required <code>permissions</code> <code>List[str]</code> User's permissions Not required <code>avatar</code> <code>str</code> User's avatar Not required <code>organisations</code> <code>List[OutputOrganisationProfile]</code> User's organisations Not required <code>defaultOrganisation</code> <code>str</code> User's default organisation Not  required"},{"location":"reference/models/user/#input-update-user","title":"Input Update User","text":"<p>Parameters</p> Name Type Description Default <code>name</code> <code>str</code> User's name required <code>organisation</code> <code>str</code> User's organisation Not required <code>profile</code> <code>str</code> User's profile required <code>locked</code> <code>bool</code> <code>True</code> is the user is locked Not required <code>avatar</code> <code>str</code> User's avatar Not required <code>email</code> <code>str</code> User's email Not required <code>defaultOrganisation</code> <code>str</code> User's default organisation Not  required"},{"location":"reference/models/user/#input-user-organisation","title":"Input User Organisation","text":"<p>Parameters</p> Name Type Description Default <code>organisation</code> <code>str</code> User's organisation required <code>profile</code> <code>str</code> User's profile required <code>default</code> <code>bool</code> Not required"},{"location":"reference/models/user/#output-user-organisation","title":"Output User Organisation","text":"<p>Parameters</p> Name Type Description Default <code>organisation</code> <code>str</code> User's organisation required <code>profile</code> <code>str</code> User's profile required <code>default</code> <code>bool</code> Not required"}]}